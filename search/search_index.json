{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"introduce/","title":"\u4e3b\u9875","text":"<p>\u4ecb\u7ecd</p> <p>\u200b\u6b22\u8fce\u6765\u5230Windchaser\u7684\u7b14\u8bb0\u672c\uff0c\u6211\u4f1a\u5728\u8fd9\u91cc\u8bb0\u5f55\u4e00\u4e9b\u8bfe\u7a0b\u7b14\u8bb0\u4ee5\u53ca\u81ea\u5b66\u7b14\u8bb0\uff0c\u65b9\u4fbf\u81ea\u5df1\u671f\u672b\u590d\u4e60\uff08\u672c\u4eba\u8bb0\u6027\u5f88\u5dee\uff09\uff0c\u540c\u65f6\u8bb0\u5f55\u4e00\u4e0b\u5b66\u4e60\u8fc7\u7a0b</p> <p>\u90e8\u5206\u53c2\u8003\u8d44\u6599\uff1a</p> <p>\u9e64\u7fd4\u4e07\u91cc\u7684\u7b14\u8bb0\u672c</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/C%2B%2B%20%E5%B9%B6%E8%A1%8C%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%28TODO%29/","title":"C++ \u5e76\u884c\u7a0b\u5e8f\u8bbe\u8ba1","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/C%2B%2B%20%E5%B9%B6%E8%A1%8C%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%28TODO%29/#c_1","title":"C++\u5165\u95e8","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/C%2B%2B%20%E5%B9%B6%E8%A1%8C%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%28TODO%29/#oop","title":"OOP\uff08\u9762\u5411\u5bf9\u8c61\u7a0b\u5e8f\u8bbe\u8ba1\uff09","text":"<p>Class\uff08\u7c7b\uff09\uff1aData with Functions</p> <p>Class\u7684\u5b9a\u4e49\uff1a</p> <pre><code>class ClassName {\n    public: // Public interface\n    ClassName(); // Constructor\n    ~ClassName(); // Destructor\n    void publicMethod(); // Public method\n    private: // Private implementation details\n    int privateData; // Private data member\n    void privateMethod(); // Private method\n    protected: // Protected members (accessible by derived classes)\n    int protectedData; // Protected data member\n};\n</code></pre> <p>\u5b9e\u4f8b\u5316:</p> <pre><code>int main() {\n    Point p(10, 20); // Create an object of Point\n    p.display(); // Call public method\n    return 0;\n}\n</code></pre> <p>This Pointer:</p> <pre><code>class Point {\n    private:\n    int x, y;\n    public:\n    Point(int x, int y) {\n        this-&gt;x = x; // Use this to refer to member variable\n        this-&gt;y = y; // Use this to refer to member variable\n    }\n};\n</code></pre>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/CUDA%20C%20%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%28TODO%29/","title":"CUDA C \u7f16\u7a0b\u57fa\u7840","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/CUDA%20C%20%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%28TODO%29/#heterogeneous-computing","title":"\u5f02\u6784\u8ba1\u7b97(Heterogeneous Computing)","text":"<ul> <li>Host\uff1aCPU\u53ca\u5176\u5185\u5b58</li> <li>Device\uff1aGPU\u53ca\u5176\u5185\u5b58</li> </ul> <p>CPU\u548cGPU\u901a\u8fc7PCI\u603b\u7ebf\u8fdb\u884c\u901a\u4fe1\uff0c\u5728GPU\u4e0a\u8fdb\u884c\u8ba1\u7b97\u65f6\u5148\u5c06CPU\u5185\u5b58\u4e2d\u7684\u6570\u636e\u9001\u5230GPU\u5185\u5b58\u4e2d\uff0c\u8fd0\u7b97\u4e4b\u540e\u518d\u5c06\u7ed3\u679c\u9001\u56deCPU\u5185\u5b58</p> <p>\u7f16\u8bd1\u5668nvcc\uff0c\u6587\u4ef6\u540e\u7f00.cu</p> <p>Hello World</p> <pre><code>__global__ void mykernel(){} //global \u53ef\u4ee5\u5728CPU\u548cGPU\u4e0a\u8fd0\u884c\nint main(){\n    mykernel&lt;&lt;&lt;1,1&gt;&gt;&gt;(); //\u8c03\u7528GPU\u4e0a\u7684kernel\n    pritf(\"Hello World from GPU\\n\");\n}\n</code></pre> <pre><code>__global__ void add(int *a, int *b, int *c){\n     *c = *a + *b;   \n}\n\nint main(){\n    int a,b,c;              //host copies of a,b,c\n    int *d_a, *d_b, *d_c;   //device copies of a,b,c\n    int size = sizeof(int);\n    //Allocate space for device copies\n    cudaMalloc((void **)&amp;d_a, size);\n    cudaMalloc((void **)&amp;d_b, size);\n    cudaMalloc((void **)&amp;d_c, size);\n    //copy inputs to device\n    cudeMemcpy(d_a, &amp;a, size, cudaMemcpyHostToDevice);\n    cudeMemcpy(d_b, &amp;b, size, cudaMemcpyHostToDevice);\n    //Launch add() kernel on GPU\n    add&lt;&lt;&lt;1,1&gt;&gt;&gt;(d_a,d_b,d_c);\n    //copy result back to host\n    cudaMemcpy(&amp;c, d_c, size,cudamemcpyDeviceToHost);\n    //cleanup\n    cudaFree(d_a);cudaFree(d_b);\n    cudaFree(d_c);\n    return 0;\n}\n\nadd&lt;&lt;&lt;N,1&gt;&gt;&gt;(d_a,d_b,d_c) //N \u8868\u793a\u5e76\u884c\u6267\u884c\u6b21\u6570\uff0c\u542f\u52a8\u4e86N\u4e2ablock\nadd&lt;&lt;&lt;1,N&gt;&gt;&gt;(d_a,d_b,d_c) //N\u8868\u793a\u4e00\u4e2ablock\u4e2d\u7684\u7ebf\u7a0b\u4e2a\u6570\n</code></pre> <p>\u5728GPU\u4e0a\u5206\u914d\u5185\u5b58\uff1a</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/CUDA%20C%20%E7%BC%96%E7%A8%8B%E5%9F%BA%E7%A1%80%28TODO%29/#block-and-thread","title":"Block and Thread","text":"<p>\u5b9a\u4e49 \uff1a<code>add()</code>\u7684\u6bcf\u6b21\u5e76\u884c\u8c03\u7528\u79f0\u4e3a\u4e00\u4e2ablock</p> <ul> <li>block\u7684\u96c6\u5408\u79f0\u4e3agrid</li> <li>\u6bcf\u6b21\u8c03\u7528\u90fd\u53ef\u4ee5\u4f7f\u7528<code>blockIdx.x</code>\u6765\u5f15\u7528\u5176block index</li> </ul> <pre><code>__global__ void add(int *a, int *b, int *c){\n    c[blockIdx.x] = a[blockIdx.x] + b[blockIdx.x];\n}\n</code></pre> <p>\u901a\u8fc7<code>blockIdx.x</code>\u4f7f\u5f97\u6bcf\u4e2ablock\u5904\u7406\u4e0d\u540c\u7684index</p> <p></p> <p>Shared Memory:\u5728\u540c\u4e00\u5757block\u4e2d\uff0c\u7ebf\u7a0b\u53ef\u4ee5\u4e92\u76f8share data</p> <p>\u5377\u79ef\uff1a</p> <pre><code>__global__ void stencil_1d(int *in, int *out){\n    __shared__ int temp[BLOCK_SIZE + 2 * RADIUS];\n    int gindex = threadIdx.x + blockIdx.x * blockDim.x;\n    int lindex = threadIdx.x + RADIUS;\n}\n</code></pre>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/HPC%20%E9%AB%98%E7%BA%A7%E8%AF%9D%E9%A2%98/","title":"HPC \u9ad8\u7ea7\u8bdd\u9898","text":"<p>HPC System:Four  Components</p> <ul> <li>Computing</li> <li>Storage</li> <li>Networking</li> <li>Compiling</li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/HPC%20%E9%AB%98%E7%BA%A7%E8%AF%9D%E9%A2%98/#conputing","title":"Conputing","text":"<p>\u4eba\u5de5\u667a\u80fd\u5927\u6a21\u578b\u7b97\u529b\u4f30\u8ba1</p> <ul> <li>$\u6570\u636e\u91cf(D)&gt;15\\times\u6a21\u578b\u53c2\u6570\u91cf(N)$</li> <li>$\u4e07\u4ebf\u6a21\u578b(N) = 1000*10^9 = 10^{12}$</li> <li>$\u6570\u636e\u91cf(D) &gt; 1510^{12} = 1.510^{13}$</li> <li>$\u8ba1\u7b97\u6b21\u6570C \\approx 6\\times N \\times D$</li> <li>$\u4e07\u4ebf\u6a21\u578b\u8ba1\u7b97\u6b21\u6570C \\approx6ND \\approx9*10^{25}$</li> </ul> <p>CPU:Central Processing Unit(\u4e00\u4e2a\u5927\u5b66\u751f)</p> <p>GPU:Grarphics Processing Unit(100\u4e2a\u5c0f\u5b66\u751f)\u2014\u2014\u9002\u5408\u540c\u65f6\u6267\u884c\u591a\u4e2a\u7b80\u5355\u64cd\u4f5c</p> <p>FPGA:Field Programable Gate Array(\u84dd\u7fd4\u6280\u6821)\u2014\u2014\u9002\u5408\u505a\u5b9a\u5236\u5316\u8ba1\u7b97</p> <p>\u6027\u80fd\u6bd4\u8f83\uff1a</p> <p></p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/HPC%20%E9%AB%98%E7%BA%A7%E8%AF%9D%E9%A2%98/#cpu","title":"CPU","text":"<p>Intel CPU\u67b6\u6784</p> <p></p> <p>CPU\u7ecf\u51785\u7ea7\u6d41\u6c34\u7ebf\uff1a</p> <p></p> <ul> <li>\u4f18\u70b9\uff1a\u4e00\u6761\u6307\u4ee4\u64cd\u4f5c\u4e00\u4e2a\u6570\uff0c\u7075\u6d3b\uff0c\u53ef\u5b9e\u73b0\u4efb\u610f\u529f\u80fd\u51fd\u6570\u3002</li> <li>\u52a3\u52bf\uff1a\u6548\u7387\u5f88\u4f4e\uff0c\u4e94\u4e2a\u6d41\u6c34\u7ebf\u6a21\u5757\u53ea\u6709EXE\u6a21\u5757\u5728\u771f\u6b63\u505a\u8ba1\u7b97</li> </ul> <p>CPU\u5e76\u884c\u65b9\u5f0fSIMD\uff1a\u4e00\u4e2a\u5468\u671f\u5b8c\u6210\u591a\u4e2a\u52a0\u6cd5</p> <p>CPU\uff1a\u8d85\u6807\u91cfSuperscalar</p> <ul> <li>CISC\u6307\u4ee4\u5185\u90e8RISC\u5316\u2014\u2014\u8bfb\u5165CISC\u6307\u4ee4\uff0c\u8f6c\u6362\u6210RISC\u540e\u518d\u6267\u884c</li> <li>\u6307\u4ee4\u591a\u5e76\u53d1\uff1a4\u6761\u5fae\u6307\u4ee4\u5e76\u53d1\uff0c6\u6761CISC\u6307\u4ee4\u4e00\u8d77\u89e3\u6790</li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/HPC%20%E9%AB%98%E7%BA%A7%E8%AF%9D%E9%A2%98/#gpu","title":"GPU","text":"<p>Nvidia GPU \u67b6\u6784\uff1a</p> <p></p> <p>\u77e9\u9635\u6307\u4ee4\uff1a\u51cf\u5c11\u5468\u671f\u6570\uff0c\u6bcf\u4e2a\u5468\u671f\u5185\u5b58\u8bbf\u95ee\u91cf\u589e\u5927\uff0c\u5145\u5206\u5229\u7528\u5185\u5b58</p> <p>\u793a\u4f8b\uff1a\u77e9\u9635\u4e58\u6cd5 <code>C[:] [:] = A[:] [:] + B[:] [:]</code></p> <p>GPU\u4e0a\u4f7f\u7528Tensor Cores\u7684\u7f16\u7a0b\uff1a</p> <pre><code>#include&lt;mma.h&gt;\nusing namespace nvcuda;\n__global__ void wmma_ker(half *a, half *b, float *c){\n    //Declare the fragments\n    wmma::fragment&lt;wmma::matrix-a,16,16,16,half,wmma::col_major&gt; a_frag;\n    wmma::fragment&lt;wmma::matrix-b,16,16,16,half,wmma::col_major&gt; b_frag;\n    wmma::fragment&lt;wmma::accumulator,16,16,16,float&gt; c_frag;\n\n    //Initialize the output c_frag to zero\n    wmma::fill_fragment(c_frag, 0.0f);\n\n    //Load the inputs a_frag,b_frag\n    wmma::load_matrix_sync(a_frag,a,16);\n    wmma::load_matrix_sync(b_frag,b,16);\n\n    //Perform matrix multiplication c_frag = a_frag * b_frag + c_frag\n    wmma::mma_sync(c_frag,a_frag,b_frag,c_frag);\n\n    //Store the output c_frag\n    wmma::store_matrix_sync(c,c_frag,16,wmma::mem_row_major);\n}\n</code></pre> <p>GPU\u7684\u9650\u5236\uff1aPCIe\u7684\u5e26\u5bbd(I/O)</p> <p></p> <p>PCIe\u5e26\u5bbd:64GB/s  GPU\u5e26\u5bbd\uff1a3000GB/s</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/HPC%20%E9%AB%98%E7%BA%A7%E8%AF%9D%E9%A2%98/#fpga","title":"FPGA","text":"<p>\u7279\u70b9\uff1a\u53ef\u5b9e\u73b0\u4f4d\u7ea7\u522b\u7684\u5e76\u884c\u5ea6\uff0c\u662f\u72ec\u7acb\u7684\u7cfb\u7edf\uff0c\u662fMemory\uff0cNetwork\uff0cCPU\uff0cGPU\u7684\u7c98\u5408\u5242</p> <p>FPGA\u7f16\u7a0b\uff1a\u5e76\u884c\u5ea6\u9ad8\uff0c\u7ec4\u5408\u903b\u8f91\uff0c\u65f6\u5e8f\u903b\u8f91</p> <p></p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/HPC%20%E9%AB%98%E7%BA%A7%E8%AF%9D%E9%A2%98/#networking","title":"Networking","text":"<ul> <li>Scale Up Network</li> <li>Scale Out Network</li> </ul> <p>\u5177\u4f53\u77e5\u8bc6\u53ef\u53c2\u8003\u8ba1\u7b97\u673a\u7f51\u7edc</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/HPC%20%E9%AB%98%E7%BA%A7%E8%AF%9D%E9%A2%98/#storage","title":"Storage","text":"<p>\u51e0\u7c7b\u5b58\u50a8\uff1a</p> <ul> <li>Flip-Flop\uff1a\u901f\u5ea6\u5feb\uff0c\u5e76\u884c\u5ea6\u9ad8\uff0c\u6210\u672c\u5f88\u8d35</li> <li>SRAM\uff1a\u76f8\u5bf9\u8f83\u5feb\uff0c\u5e76\u884c\u5ea6\u4e0d\u592a\u9ad8\uff0c\u6bcf\u6b21\u5904\u7406\u4e00\u4e2adata word\uff0c\u6210\u672c\u8d35(\u51e0MB)</li> <li>DRAM\uff1a\u901f\u5ea6\u6162\uff0c\u4f46\u662f\u5bb9\u91cf\u5927\uff08\u51e0GB\uff09\uff0c\u6210\u672c\u4fbf\u5b9c\uff0c\u4f46\u662f\u4f7f\u7528\u6709\u635f\u8017</li> <li>Flash Memory(\u95ea\u5b58)\uff1a\u975e\u5e38\u6162\uff0c\u5341\u5206\u4fbf\u5b9c\uff0c\u5bb9\u91cf\u5f88\u9ad8</li> </ul> <p>\u6027\u80fd\u5bf9\u6bd4\uff1a</p> <p></p> <p>\u2014\u2014  latency:\u5ef6\u8fdf  capacity:\u5bb9\u91cf  bandwidth:\u5e26\u5bbd</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/HPC%20%E9%AB%98%E7%BA%A7%E8%AF%9D%E9%A2%98/#ai","title":"AI\u8ba1\u7b97\u7cfb\u7edf\uff1a\u5f02\u6784+\u5206\u5e03\u5f0f","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/","title":"OpenMP &amp; MPI","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#openmp","title":"OpenMP","text":"<p>\u5b9a\u4e49\uff1aOpen Multi-Processing\uff0c\u652f\u6301C\uff0cC++\uff0cFortran\u7684\u4e00\u79cdAPI\uff0c\u548c\u7f16\u8bd1\u5668\u5f3a\u76f8\u5173</p> <p>OpenMP provides us an easy way to transform serial programs into parallel.</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#example-1-parallel-for-hello-world","title":"Example 1: Parallel for hello world","text":"<pre><code>#include &lt;stdio.h&gt;\n#include &lt;omp.h&gt;        //\u6dfb\u52a0OpenMP\u5934\u6587\u4ef6\nint main(){\n    printf(\"Welcome to OpenMP!\\n\");\n    #pragma omp parallel        //Preprocessing Directive\n    {\n        int ID = omp_get_thread_num();       //Parallel Region\n        printf(\"hello(%d)\", ID);             \n        printf(\"World(%d)\\n\", ID);           \n    }                                        \n    printf(\"Bye\\n\");\n}\n</code></pre>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#fork-join-model","title":"Fork-Join Model","text":"<p>\u56fe\u4e2d\u7684\u5206\u652f\u70b9\u79f0\u4e3aFork\uff0c\u5408\u5e76\u70b9\u79f0\u4e3aJoin</p> <p>\u62bd\u8c61\u539f\u7406\u56fe\uff1a</p> <p></p> <p>\u8fd9\u91cc\u7684TID=0\u7684\u7ebf\u7a0b\u5c31\u662f\u4e3b\u7ebf\u7a0b</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#openmp-directive","title":"OpenMP directive","text":"<p>\u5b98\u65b9\u6587\u6863</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#constructs","title":"Constructs","text":"<p>An OpenMP Constructs is a formation for which the directive is executable.</p> <p>Work-distribution Constructs:</p> <ul> <li>single</li> <li>section</li> <li>for</li> </ul> <p></p> <p>Section:</p> <pre><code>#pragma omp parallel ...\n{\n    {\n        SECTION 1\n    }\n    {\n        SECTION 2\n    }\n    {\n        SECTION 3\n    }\n}\n</code></pre> <p>\u6bcf\u4e2aSection\u4e2d\u7684\u5185\u5bb9\u53ef\u4ee5\u4e0d\u4e00\u6837</p> <p>\u7f16\u8bd1\u6307\u4ee4\u793a\u4f8b\uff1a</p> <pre><code>gcc a.c -o a -fopenmp\n</code></pre>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#example-2parallel-for-directive","title":"Example 2\uff1aparallel for Directive","text":"<pre><code>#pragma omp parallel for\n//\u6ca1\u6709{}\uff0c\u5c06for\u5faa\u73af\u5185\u90e8\u5206\u914d\u5230\u4e0d\u540c\u7ebf\u7a0b\nfor(int i=0; i&lt;N; i++){\n    c[i] = a[i] + b[i];\n}\n\n//nproc\u6307\u4ee4\u53ef\u4ee5\u67e5\u770bCPU\u53ef\u4ee5\u540c\u65f6\u5904\u7406\u591a\u5c11\u4e2a\u7ebf\u7a0b\n</code></pre> <p>\u5b9e\u9645\u4e0a\u5e76\u884c\u901f\u5ea6\u63d0\u5347(Speed Up)\u548cCPU\u6838\u5fc3\u6570(\u53ef\u540c\u65f6\u8fdb\u884c\u7684\u7ebf\u7a0b\u6570)\u5e76\u975e\u7ebf\u6027\u5173\u7cfb\uff0c\u8fd9\u662f\u56e0\u4e3aoverhead\uff1a</p> <ul> <li>\u521b\u5efa\u548c\u9500\u6bc1\u7ebf\u7a0b</li> <li>\u64cd\u4f5c\u7cfb\u7edf\u8c03\u5ea6</li> <li>OpenMP\u672c\u8eab\u7684\u8c03\u5ea6</li> <li>NUMA\u9020\u6210\u7684\u5185\u5b58\u8bbf\u95ee\u65f6\u5ef6\u4e0d\u4e00\u81f4\u7b49\u7b49</li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#example-3-loop-schedule","title":"Example 3: Loop Schedule","text":"<pre><code>#pragma omp parallel for\nfor(int i=0;i&lt;N;i++){\n    c[i] = f(i);      //Workload is unbalanced!\u6b64\u65f6\u9700\u8981for\u540e\u9762\u7684clause\u4fee\u9970\n}\n</code></pre> <ul> <li> <p>Static \u8c03\u5ea6\uff1a\u6267\u884c\u524d\u5b8c\u6210\u8c03\u5ea6\uff0c\u51cf\u5c11\u6267\u884c\u65f6OpenMP\u7684\u8c03\u5ea6</p> </li> <li> <p>Dynamic\u8c03\u5ea6\uff1a\u6839\u636e\u4efb\u52a1\u6570\u91cf\u52a8\u6001\u8c03\u6574\u5e76\u884c\u5ea6\uff0c\u4f46\u662fOpenMP\u7ef4\u62a4\u5f00\u9500\u5927</p> </li> </ul> <p>\uff08schedule(dynamic ,1)\uff0c\u5176\u4e2d1\u8868\u793a\u8c03\u5ea6\u7684\u7c92\u5ea6\uff09</p> <p></p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#example-4nested-for-loop","title":"Example 4\uff1aNested for loop","text":"<pre><code>//Matrix Element-wise Addition\n#pragma omp parallel for collapse(2)\nfor(int i=0;i&lt;N;i++){\n    for(int j=0;j&lt;N:j++){\n        c[i][j] = a[i][j] + b[i][j];\n    }\n}\n</code></pre>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#shared-data-and-data-hazards","title":"Shared Data and Data Hazards","text":"<p>data hazards:\u4e0d\u540c\u6838\u5fc3\u6267\u884c\u8fc7\u7a0b\u4e2d\u4e0d\u77e5\u9053\u53e6\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u884c\u5230\u4ec0\u4e48\u7a0b\u5ea6\uff0c\u7531\u4e8e\u6570\u636e\u5171\u4eab\u591a\u4e2a\u7ebf\u7a0b\u4f1a\u8bbf\u95ee\u540c\u4e00\u53d8\u91cf\uff0c\u5bfc\u81f4data hazards\uff0c\u5982\u4e0b\u56fe</p> <p></p> <pre><code>#pragma omp parallel for\nfor (int i = 0; i &lt; 100; i++) {\n    sum += a[i];\n}\n</code></pre> <p>Solution\uff1a</p> <ul> <li>private\uff1a\u6bcf\u4e2a\u7ebf\u7a0b\u6709\u81ea\u5df1\u7684\u53d8\u91cf\uff0c\u4e92\u4e0d\u5e72\u6270</li> </ul> <pre><code>#pragma omp parallel for private\nfor (int i = 0; i &lt; 100; i++) {\n    sum += a[i];\n}\n</code></pre> <ul> <li> <p>shared</p> </li> <li> <p>Critical Section</p> </li> </ul> <pre><code>#pragma omp parallel for\n  for (int i = 0; i &lt; 100; i++) {\n#pragma omp critical\n      { sum += a[i]; }//\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u8fdb\u5165\uff0c\u76f8\u5f53\u4e8e\u6b64\u90e8\u5206\u4e32\u884c\n  }\n  printf(\"Sum = %d\\n\", sum)\n</code></pre> <ul> <li>Atomic Operation</li> </ul> <pre><code>#pragma omp parallel for\n  for (int i = 0; i &lt; 100; i++) {\n#pragma omp atomic     //\u539f\u5b50\u64cd\u4f5c\uff0c\u4e0d\u53ef\u5206\u5272\uff0c\u4fdd\u8bc1\u591a\u4e2a\u7ebf\u7a0b\u5bf9\u4e00\u4e2a\u53d8\u91cf\u7684\u64cd\u4f5c\u662f\u539f\u5b50\u7684\n        //\u4e0d\u4f1a\u5206\u6210\u591a\u4e2a\u64cd\u4f5c\uff0c\u4f7f\u7528CPU\u539f\u5b50\u5316\u6307\u4ee4\uff0c\u53ea\u9002\u7528\u4e8e\u7b80\u5355\u64cd\u4f5c\uff08\u56db\u5219\u8fd0\u7b97\u548c\u4f4d\u8fd0\u7b97\u7b49\uff09\n      sum += a[i];\n  }\n  printf(\"Sum = %d\\n\", sum);\n</code></pre> <ul> <li>Reduction\uff08\u63a8\u8350\uff09</li> </ul> <pre><code>#pragma omp parallel for reduction(+:sum) //+\u662f\u64cd\u4f5c\uff0csum\u662f\u53d8\u91cf\nfor (int i = 0; i &lt; 100; i++) {\n  sum += a[i];\n}\nprintf(\"Sum = %d\\n\", sum);\n</code></pre> <p>Comparison</p> <ul> <li> <p>Critical Region: Based on locking</p> </li> <li> <p>Atomic Operation: Based on hardware atomic operations</p> </li> <li> <p>Reduction: only synchronize in the end</p> </li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#example-5-gemm","title":"Example 5: GEMM","text":"<pre><code>//General Matrix Multiplication (GEMM)\n#pragma omp parallel for collapse(3) reduction(+ : c)\n    for (int i = 0; i &lt; N; i++) {\n        for (int j = 0; j &lt; N; j++) {\n        c[i][j] = 0;\n            for (int k = 0; k &lt; N; k++) {\n                c[i][j] += a[i][k] * b[k][j];\n            }\n        }\n    }\n</code></pre>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#false-sharing","title":"False Sharing","text":"<p>\u4e00\u4e2a\u6838\u5fc3\u6539\u53d8\u4e86cache\u4e2d\u7684\u5185\u5bb9\u540e\u53e6\u4e00\u4e2a\u6838\u5fc3\u7684cache\u5c31\u5931\u6548\u4e86\uff0c\u9700\u8981\u91cd\u65b0\u8bfb\u53d6\uff0c\u6240\u4ee5\u5728\u591a\u7ebf\u7a0b\u8bbf\u95ee\u65f6\u9700\u8981\u8ba9\u6bcf\u4e00\u6bb5core\u5206\u5272\u7684\u5927\u5c0f\u5927\u4e8ecache line</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#summary","title":"Summary","text":"<p>How to Optimize a program with OpenMP:</p> <p></p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#mpi","title":"MPI","text":"<ul> <li>Intel-MPI</li> <li>OpenMPI</li> <li>MPICH</li> <li>HMPI</li> </ul> <pre><code>#include &lt;mpi.h&gt;\n#include &lt;stdio.h&gt;\n    int main(int argc, char** argv) {\n    MPI_Init(&amp;argc, &amp;argv);\n    int world_size;\n    MPI_Comm_size(MPI_COMM_WORLD, &amp;world_size);\n    int world_rank;\n    MPI_Comm_rank(MPI_COMM_WORLD, &amp;world_rank);\n    char processor_name[MPI_MAX_PROCESSOR_NAME];\n    int name_len;\n    MPI_Get_processor_name(processor_name, &amp;name_len);\n    printf(\"Hello world from processor %s, rank %d out of %d processors\\n\",\n    processor_name, world_rank, world_size);\n    MPI_Finalize();     //\u4e0d\u8981\u91cd\u590d\u7684init,finalize,\u505a\u4e00\u6b21\u5c31\u884c\n    return 0;\n}\n</code></pre>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#basic-concepts","title":"Basic Concepts","text":"<ul> <li> <p>rank:\u6bcf\u4e2a\u8fdb\u7a0b\u7684\u7f16\u53f7</p> </li> <li> <p>MPI_COMM_SPLIT\uff1a\u5c06\u8fdb\u7a0b\u5206\u7ec4</p> </li> <li> <p>Blocking\uff1a\u901a\u4fe1\u7ed3\u675f\u540e\u518d\u8fdb\u884c\u540e\u7eed\u64cd\u4f5c</p> </li> </ul> <p>Non-Blocking\uff1a\u901a\u4fe1\u7684\u540c\u65f6\u5c31\u53ef\u4ee5\u8fdb\u884c\u540e\u7eed\u64cd\u4f5c</p> <ul> <li>Order\uff1a\u4fdd\u8bc1\u6570\u636e\u5305\u4f20\u8f93\u548c\u63a5\u6536\u7684\u987a\u5e8f\u662f\u4e00\u81f4\u7684\uff0c\u4e0d\u4f1a\u98a0\u5012\uff0c\u4f46\u4e0d\u4f1a\u4fdd\u8bc1\u6570\u636e\u4f20\u8f93\u7684\u516c\u5e73\u6027</li> </ul> <p></p> <p>\u6709\u53ef\u80fdRank1\u4e00\u76f4\u5360\u7528\u5bfc\u81f4Rank2\u65e0\u6cd5\u8fdb\u884c\u4f20\u8f93</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#point-to-point-communication","title":"Point-to-Point Communication","text":"<p>MPI send\u51fd\u6570\u548cMPI receive\u51fd\u6570</p> <pre><code>int MPI_Send(\n    const void* buffer,     //\u6570\u636e\u5185\u5b58\u8d77\u59cb\u6307\u9488\uff0c\u6307\u5411\u8981\u4f20\u8f93\u7684\u6570\u636e\n    int count,              //\u4f20\u8f93\u7684\u6570\u91cf\n    MPI_Datatype datatype,  //\u6570\u636e\u7684\u7c7b\u578b\n    int recipient,          //\u76ee\u6807\u8fdb\u7a0bID\n    int tag,                //\u6d88\u606f\u6807\u7b7e\uff0c\u4e00\u822c\u4e3a0\n    MPI_Comm communicator   //\u901a\u4fe1\u57df\uff0c\u4e00\u822c\u4e3aMPI_COMM_WORLD\n);\n\nint MPI_Recv(\n    void* buffer,\n    int count,\n    MPI_Datatype datatype,\n    int sender,             //\u53d1\u9001\u8fdb\u7a0bID\n    int tag,\n    MPI_Comm communicator,\n    MPI_Status* status\n    //MPI_Status represents the status of a reception operation\n    //\u4e00\u822c\u6709\u4e09\u79cd\uff1aMPI_SOURCE\uff0cMPI_TAG\uff0cMPI_ERROR\n\n);  //\u963b\u585e\u51fd\u6570\n</code></pre> <p>A common mistake</p> <pre><code>//n = 2\nMPI_Comm_rank(comm, &amp;my_rank);\nMPI_Ssend(sendbuf, count, MPI_INT, my_rank ^ 1, tag, comm);\nMPI_Recv(recvbuf, count, MPI_INT, my_rank ^ 1, tag, comm, &amp;status);\n</code></pre> <p>MPI_Ssend()\u51fd\u6570\u662f\u963b\u585e\u51fd\u6570\uff0c\u9700\u8981\u7b49\u5230\u5bf9\u65b9\u63a5\u6536\u540e\u624d\u4f1a\u7ee7\u7eed\u6267\u884c</p> <p>\u4e0a\u9762\u7684\u7a0b\u5e8f\u4f1a\u53d1\u751fdeadlock</p> <p>Solution</p> <pre><code>//n = 2\nMPI_Comm_rank(comm, &amp;my_rank);\nif (my_rank == 0) {\n    MPI_Ssend(sendbuf, count, MPI_INT, 1, tag, comm);\n    MPI_Recv(recvbuf, count, MPI_INT, 1, tag, comm, &amp;status);\n} else if (my_rank == 1) {\n    MPI_Recv(recvbuf, count, MPI_INT, 0, tag, comm, &amp;status);\n    MPI_Ssend(sendbuf, count, MPI_INT, 0, tag, comm);\n}\n</code></pre> <p>Or Use MPI_Sendrecv</p> <pre><code>int MPI_Sendrecv(\n    const void* buffer_send,        //Notice:The buffers used for send and receive must be different.\n    int count_send,\n    MPI_Datatype datatype_send,\n    int recipient,\n    int tag_send,\n    void* buffer_recv,\n    int count_recv,\n    MPI_Datatype datatype_recv,\n    int sender,\n    int tag_recv,\n    MPI_Comm communicator,\n    MPI_Status* status\n);\n</code></pre> <p>Or Use Non-Blocking Function(\u4e0d\u7b49\u5bf9\u65b9\u63a5\u6536\u5230\u5c31\u7ee7\u7eed\u6267\u884c)</p> <pre><code>int MPI_Isend(\n    const void* buffer,\n    int count,\n    MPI_Datatype datatype,\n    int recipient,\n    int tag,\n    MPI_Comm communicator,\n    MPI_Request* request\n);\nint MPI_IRecv(...);\n</code></pre> <p>\u5982\u4f55\u786e\u5b9a\u5bf9\u65b9\u786e\u5b9e\u63a5\u6536\u5230\u6570\u636e\uff1a</p> <ul> <li>MPI_Test\uff1a\u975e\u963b\u585e\uff0c\u68c0\u67e5\u901a\u4fe1\u662f\u5426\u5b8c\u6210\uff0c\u53ea\u662f\u770b\u4e00\u773c\uff0c\u4ecd\u7136\u7ee7\u7eed\u8fd0\u884c</li> <li>MPI_Wait\uff1a\u963b\u585e\uff0c\u7b49\u5f85\u901a\u4fe1\u5b8c\u6210\u540e\u518d\u7ee7\u7eed</li> </ul> <p>\u5e94\u7528\uff1a\u5148TEST\uff0c\u4e2d\u95f4\u6267\u884c\u4e00\u4e9b\u4e0d\u9700\u8981\u6570\u636e\u4f9d\u8d56\u7684\u8ba1\u7b97\uff0c\u9700\u8981\u4f9d\u8d56\u65f6\u518dWait</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#collective-communication","title":"Collective Communication","text":"<ul> <li>Broadcast: one to all</li> </ul> <pre><code>int MPI_Bcast(\n    void* buffer,\n    int count,\n    MPI_Datatype datatype,\n    int emitter_rank,     //\u5e7f\u64ad\u53d1\u8d77\u8005\uff0c\u5176\u4ed6\u8fdb\u7a0b\u9700\u8981\u7b49\u8be5\u4e3b\u8fdb\u7a0b\u901a\u4fe1\u4e4b\u540e\u5728\u6267\u884c\n    MPI_Comm communicator\n);\n</code></pre> <p>\u4f18\u70b9\uff1a\u63d0\u5347\u4f20\u8f93\u6548\u7387\uff0c\u4f20\u8f93\u5230\u4e00\u4e2a\u8fdb\u7a0b\u4e4b\u540e\u8be5\u8fdb\u7a0b\u53ef\u4ee5\u7ee7\u7eed\u5411\u5176\u4ed6\u8fdb\u7a0b\u53d1\u9001($logN$)</p> <ul> <li>Synchronization</li> </ul> <pre><code>MPI_Barrier(COMM)   //\u5982\u679c\u67d0\u4e00\u8fdb\u7a0b\u8c03\u7528\u4e86\u6b64\u51fd\u6570\uff0c\u9700\u8981\u7b49\u5f85\u5176\u4ed6\u8fdb\u7a0b\u5230\u8fbe\u6b64barrier\u540e\u518d\u7ee7\u7eed\n</code></pre> <p></p> <ul> <li>Scatter(One to All)</li> </ul> <pre><code>int MPI_Scatter(\n    const void* buffer_send,\n    int count_send,             //The number of elements to send to each process\n    MPI_Datatype datatype_send,\n    void* buffer_recv,\n    int count_recv,             //The number of elements in the receive buffer\n    MPI_Datatype datatype_recv,\n    int root,\n    MPI_Comm communicator\n);\n</code></pre> <p></p> <ul> <li>Gather(All to One)</li> </ul> <pre><code>int MPI_Gather(\n    const void* buffer_send,\n    int count_send,\n    MPI_Datatype datatype_send,\n    void* buffer_recv,\n    int count_recv,\n    MPI_Datatype datatype_recv,\n    int root,\n    MPI_Comm communicator\n);\n</code></pre> <p></p> <p>Example:Compute Average</p> <pre><code>MPI_Scatter(buffer, 0x1000000/4, MPI_DOUBLE, local_buffer, 0x1000000/4, MPI_DOUBLE, 0, MPI_COMM_WORLD);\ndouble local_avg = 0;\nfor(int i=0; i&lt;0x1000000/4; i++){\n    local_avg += local_buffer[i];\n}\nlocal_avg /= 0x1000000/4;\ndouble avgs[4];\nMPI_Gather(&amp;local_avg, 1, MPI_DOUBLE, avgs, 1, MPI_DOUBLE, 0, MPI_COMM_WORLD);\n</code></pre> <ul> <li>AllGather(All to All)</li> </ul> <pre><code>int MPI_Allgather(\n    const void* buffer_send,\n    int count_send,\n    MPI_Datatype datatype_send,\n    void* buffer_recv,\n    int count_recv,\n    MPI_Datatype datatype_recv,\n    MPI_Comm communicator);\n</code></pre> <p>\u53ef\u4ee5\u7406\u89e3\u4e3a\u5148Gather\u5230\u4e3b\u8fdb\u7a0b0\u4e4b\u540e\uff0c\u518d\u8fdb\u884cBroadcast\u64cd\u4f5c</p> <p></p> <ul> <li>Reduce</li> </ul> <pre><code>int MPI_Reduce(\n    const void* send_buffer,\n    void* receive_buffer,\n    int count,\n    MPI_Datatype datatype,\n    MPI_Op operation,\n    int root,\n    MPI_Comm communicator\n);\n</code></pre> <p></p> <p>Example:Compute average revisit</p> <pre><code>MPI_Scatter(buffer, 0x1000000/4, MPI_DOUBLE, local_buffer, 0x1000000/4, MPI_DOUBLE, 0, MPI_COMM_WORLD);\ndouble local_avg = 0;\nfor(int i=0; i&lt;0x1000000/4; i++){\n    local_avg += local_buffer[i];\n}\nlocal_avg /= 0x1000000/4;\ndouble global_avg;\nMPI_Reduce(&amp;local_avg, &amp;global_avg, 1, MPI_DOUBLE, MPI_SUM, 0, MPI_COMM_WORLD);\n</code></pre>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/OpenMP%20%26%20MPI/#miscellaneous","title":"Miscellaneous","text":"<p>OpenMPI\u7f16\u8bd1\u4f7f\u7528</p> <p></p> <p>mpirun\u7684\u7528\u6cd5</p> <ul> <li>-x[env]: \u6307\u5b9a\u73af\u5883\u53d8\u91cf</li> <li>-bind -to core: \u7ed1\u6838</li> <li>-hostfile [hostfile]</li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E5%90%91%E9%87%8F%E5%8C%96%E8%AE%A1%E7%AE%97/","title":"\u5411\u91cf\u5316\u8ba1\u7b97","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E5%90%91%E9%87%8F%E5%8C%96%E8%AE%A1%E7%AE%97/#part-01-numpy","title":"Part 01 NumPy","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E5%90%91%E9%87%8F%E5%8C%96%E8%AE%A1%E7%AE%97/#_2","title":"\u5f00\u59cb\u4e4b\u524d","text":"<p>\u914d\u73af\u5883\uff1a</p> <ul> <li>\u65b9\u6cd5\u4e00\uff1a\u76f4\u63a5\u5b89\u88c5Python+pip\u5b89\u88c5NumPy</li> <li>\u65b9\u6cd5\u4e8c\uff1a\u5b89\u88c5 Anaconda/Micromamba\uff08\u66f4\u8f7b\u91cf\uff09/uv\uff08\u66f4\u5feb\uff0c\u6587\u4ef6\u5939\u7ea7\u522b\u7684\u73af\u5883\u7ba1\u7406\uff09\uff0c\u4f7f\u7528\u5bf9\u5e94\u7684 install \u8fdb\u884c\u5b89\u88c5\uff08\u63a8\u8350\uff09</li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E5%90%91%E9%87%8F%E5%8C%96%E8%AE%A1%E7%AE%97/#_3","title":"\u51c6\u5907\u597d\u4e4b\u540e","text":"<p>\u5728\u4f60\u4e60\u60ef\u7684\u73af\u5883\u4e2d\u8f93\u5165 import numpy as np</p> <ul> <li>\u542b\u4e49\u662f\uff0c\u5bfc\u5165 numpy \u8fd9\u4e2a\u5305\uff0c\u5e76\u4e14\u7ed9\u5b83\u8d77\u4e2a\u540d\u53eb np</li> <li>\u4ee5\u540e\u9700\u8981\u8fd9\u4e2a\u5305\u7684\u4e1c\u897f\uff0c\u53ea\u9700\u8981 np.xxxx \u5373\u53ef\u8c03\u7528</li> <li>\u901a\u5e38\u7ea6\u5b9a\u4fd7\u6210\u5c31\u53eb\u5b83 np</li> <li>\u6ca1\u6709\u63d0\u793a\u5c31\u662f\u8fd0\u884c\u6b63\u5e38\uff08\u7279\u6307 python shell\uff09</li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E5%90%91%E9%87%8F%E5%8C%96%E8%AE%A1%E7%AE%97/#numpy","title":"NumPy\u57fa\u7840","text":"<p>\u521b\u5efa\u4e00\u4e2a\u77e9\u9635</p> <p>Note:\u5728NumPy\u4e2d\uff0c\u9ed8\u8ba4\u7684\u6570\u636e\u7c7b\u578b\u662ffloat64</p> <ul> <li>\u5c06\u539f\u6709\u5217\u8868\u8f6c\u4e3aNumPy\u77e9\u9635</li> </ul> <p></p> <ul> <li>\u521b\u5efa\u4e00\u4e2a\u5168\u662f0\u7684\u77e9\u9635\uff0c\u521b\u5efa\u4e00\u4e2a\u90fd\u662f1\u7684\u77e9\u9635\uff0c\u53c2\u6570\u4e3a\u77e9\u9635\u7684\u5f62\u72b6\uff08\u4e5f\u53ef\u4ee5\u66f4\u9ad8\u7ef4\uff09</li> </ul> <p></p> <ul> <li>\u521b\u5efa\u90fd\u662f\u81ea\u5b9a\u4e49\u503c\u7684\u77e9\u9635\uff0c\u521b\u5efa\u5355\u4f4d\u77e9\u9635\uff0c\u521b\u5efa\u7a7a\u77e9\u9635</li> </ul> <p></p> <ul> <li>\u521b\u5efa\u7b49\u6b65\u957f\u77e9\u9635</li> </ul> <p></p> <ul> <li>\u521b\u5efa\u968f\u673a\u6570\u77e9\u9635</li> </ul> <p></p> <ul> <li> <p>\u4f7f\u7528reshape()\u53ef\u4ee5\u66f4\u6539\u77e9\u9635\u7684\u5f62\u72b6\uff0c\u4e5f\u53ef\u4ee5\u7528shape\u67e5\u770b\u5f62\u72b6\uff0c\u7528ndim\u67e5\u770b\u7ef4\u6570</p> </li> <li> <p>\u6570\u636e\u7c7b\u578b\uff1a\u5f53\u521b\u5efa\u4e00\u4e2a NumPy \u7684 array \u7684\u65f6\u5019\uff0c\u5b9e\u9645\u4e0a\u521b\u5efa\u4e86\u4e00\u4e2a ndarray \u7c7b\u578b\u7684\u5bf9\u8c61\uff0c\u542b\u4e49\u662f n-dimension array \uff08n\u7ef4\u6570\u7ec4\uff09</p> </li> <li> <p>python list\u7684\u5b9e\u73b0\uff1alist\u91cc\u9762\u5b58\u7684\u662f\u6307\u9488\uff0c\u6307\u5411\u771f\u5b9e\u6570\u636e\u3002\u4fee\u6539list\u4f1a\u5f71\u54cd\u5230\u771f\u5b9e\u6570\u636e\uff0c\u590d\u5236list\u53ea\u662f\u590d\u5236\u6307\u9488\uff0c\u505a\u4fee\u6539\u4f1a\u5f71\u54cd\u771f\u5b9e\u6570\u636e\uff0c\u9700\u8981deepcopy</p> </li> <li> <p>NumPy\u4e2d\u7684\u6570\u636e\u7c7b\u578b\uff1adtype\uff0c\u7c7b\u578b\u8f6c\u6362\u8981\u7528.astype()</p> </li> <li> <p>NumPy\u7d22\u5f15\uff1a\u53ef\u4ee5\u7528\u4e8c\u7ef4\u82b1\u5f0f\u7d22\u5f15</p> </li> <li> <p>\u62f7\u8d1d\u4e0e\u89c6\u56fe\uff1a\u89c6\u56fe\u4e0d\u590d\u5236\u539f\u6709\u6570\u636e\uff0c\u800c\u62f7\u8d1d\u5219\u9700\u8981NumPy\uff0c\u6709\u4e9b\u7d22\u5f15\u4f1a\u8fd4\u56de\u62f7\u8d1d(\u82b1\u5f0f\u7d22\u5f15)\uff0c\u6709\u4e9b\u662f\u89c6\u56fe</p> </li> <li> <p>\u5e03\u5c14\u7d22\u5f15\uff1aany,all</p> </li> <li> <p>\u6761\u4ef6\u7b5b\u9009\u4e0b\u6807\uff1a\u4e8c\u7ef4\u8981\u8003\u8651\u8f74\u7684\u95ee\u9898</p> </li> <li> <p>NumPy\u8fd0\u7b97\uff1a</p> </li> </ul> <p>\u5e7f\u64ad\u673a\u5236\uff1a\u5c3a\u5bf8\u4e0d\u5339\u914d\u65f6\u5c06\u5c0f\u7684\u5e7f\u64ad\u5230\u5927\u7684\u5c3a\u5bf8\u4e0a</p> <p>\u5e7f\u64ad\u673a\u5236\u7684\u6761\u4ef6\uff1a\u4e24\u4e2a\u5411\u91cf\u7ef4\u5ea6\u76f8\u540c(shape)  OR  \u67d0\u4e2a\u7ef4\u5ea6\u4e00\u4e2a\u5411\u91cf\u6709\uff0c\u4e00\u4e2a\u65e0  OR  \u67d0\u4e2a\u7ef4\u5ea6\u4e00\u4e2a\u5411\u91cf\u6709\uff0c\u4e00\u4e2asize\u4e3a1</p> <p>\u77e9\u9635\u8f6c\u7f6e</p> <p>\u5c06\u77e9\u9635\u201c\u62cd\u5e73\u201d\u6210\u4e00\u7ef4\u77e9\u9635</p> <p>\u77e9\u9635\u7684\u5806\u53e0\uff08\u5408\u5e76\uff09\uff0c\u9ad8\u7ef4\u7684\u65f6\u5019\u4f7f\u7528==concatenate()==\u51fd\u6570\u66f4\u65b9\u4fbf</p> <p>\u77e9\u9635\u7684\u5207\u5206\uff0c\u81ea\u6211\u91cd\u590d\uff0c\u90e8\u5206\u5220\u9664\uff0c\u63d2\u5165\uff0c\u5916\u8fb9\u6846\u589e\u52a0</p> <p>\u70b9\u79ef\u548c\u53c9\u79ef\uff0c\u7edf\u8ba1\uff0c\u77e9\u9635\u6392\u5e8f</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E5%90%91%E9%87%8F%E5%8C%96%E8%AE%A1%E7%AE%97/#part-02-simd","title":"Part 02 \u624b\u5199SIMD\u5411\u91cf\u5316","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E5%90%91%E9%87%8F%E5%8C%96%E8%AE%A1%E7%AE%97/#simd","title":"SIMD","text":"<ul> <li>\u5355\u6307\u4ee4\u591a\u6570\u636e\u6d41</li> <li>x86\u4e0b\uff0cSIMD\u4e00\u822c\u548cSSE\u548cAVX\u7b49\u6307\u4ee4\u96c6\u8054\u7cfb\u5728\u4e00\u8d77\uff0cSSE\u548cAVX\u6307\u4ee4\u96c6\u4e2d\u63d0\u4f9b\u4e86\u5927\u91cf\u53ef\u4ee5\u5355\u6307\u4ee4\u64cd\u4f5c\u591a\u4e2a\u6570\u636e\u5355\u5143\u7684\u6307\u4ee4</li> <li>\u6570\u636e\u4e2a\u6570$\\ne$\u52a0\u901f\u500d\u6570</li> <li>\u6307\u4ee4\u5904\u7406\u7684\u6570\u636e\u8d8a\u957f\u8d8a\u597d\uff1f\u4e0d\u73b0\u5b9e</li> </ul> <p>\u4e3a\u4ec0\u4e48\u8981\u624b\u5199\uff1f</p> <p>\u7b80\u5355\u60c5\u51b5 -O3 -mavx2\uff0c\u7f16\u8bd1\u5668\u4f1a\u81ea\u52a8\u4f18\u5316</p> <p>\u4ee3\u7801\u7ed3\u6784\u590d\u6742\uff0c\u5faa\u73af\u96be\u4ee5\u754c\u5b9a\u8fb9\u754c\uff0c\u8fd8\u6709\u5206\u652f\uff0c\u53ea\u80fd\u624b\u5199</p> <p>\u600e\u4e48\u770b\u6587\u6863\uff1f\u67e5\u770bIntel Intrinsic\u5b98\u7f51</p> <p></p> <p></p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E5%90%91%E9%87%8F%E5%8C%96%E8%AE%A1%E7%AE%97/#_4","title":"\u57fa\u672c\u6d41\u7a0b","text":"<p>Load\u9700\u8981\u8ba1\u7b97\u7684\u6570\u636e\u5230\u5411\u91cf\u5bc4\u5b58\u5668\uff0c\u8fdb\u884c\u9700\u8981\u7684\u5411\u91cf\u5316\u8ba1\u7b97\uff0cStore\u5c06\u5411\u91cf\u5bc4\u5b58\u5668\u7684\u6570\u636e\u5b58\u56de\u5185\u5b58</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E5%90%91%E9%87%8F%E5%8C%96%E8%AE%A1%E7%AE%97/#_5","title":"\u5e38\u89c1\u95ee\u9898","text":"<ul> <li>\u5185\u5b58\u5bf9\u9f50</li> <li>\u5faa\u73af\u8fb9\u754c\u4e0d\u786e\u5b9a\u2014\u2014\u5c55\u5f00\u975e\u6574\u6570\u8fb9\u754c</li> <li>\u5faa\u73af\u5206\u652f\u7684\u5f00\u9500\u63a9\u76d6\u4e86SIMD\u63d0\u5347\u2014\u2014\u5faa\u73af\u5c55\u5f00</li> <li>\u5bc4\u5b58\u5668\u6570\u91cf\u6709\u9650\u2014\u2014\u6709\u591a\u5c11\u5bc4\u5b58\u5668\u7528\u6765\u8ba1\u7b97</li> </ul> <p>\u5927\u591a\u6570\u60c5\u51b5\u81ea\u52a8\u5411\u91cf\u5316\u5c31\u591f\u4e86\uff0c\u4e00\u5b9a\u4e00\u5b9a\u8981==\u6700\u540e==\u5728\u8fdb\u884c\u624b\u5199SIMD\u4f18\u5316</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E5%90%91%E9%87%8F%E5%8C%96%E8%AE%A1%E7%AE%97/#_6","title":"\u4f18\u5316\u77e9\u9635\u4e58\u6cd5","text":"<ol> <li>\u627e\u5230for\u5faa\u73af\uff0c\u786e\u5b9aC\u77e9\u9635\u548cA\uff0cB\u77e9\u9635</li> <li>\u786e\u5b9a\u77e9\u9635\u4e2d\u7684\u53d8\u91cf\u7c7b\u578b</li> <li>\u627e\u6307\u4ee4</li> </ol> <p>Lab2\u662f\u8981\u627e\u4e00\u4e2a\u6307\u4ee4\u4f7f\u5f9716bits*16bits\u5f97\u523032bits</p> <p>bonus\uff1a\u753b\u56fe</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E5%90%91%E9%87%8F%E5%8C%96%E8%AE%A1%E7%AE%97/#amx","title":"AMX","text":"<p>\u4ee3\u7801\u6a21\u677f\uff1a</p> <pre><code>for i = 0 to M step A_TILE_LINES:           //M &lt; 16\u65f6\u53ef\u4ee5\u53bb\u9664\u6b64\u5c42for\u5faa\u73af\n    for j = 0 to N step B_TILE_COLS:        //A_TILE\u548cB_TILE\u53ef\u4ee5\u81ea\u5df1\u5b9a\u4e49\n        SET C_TILE ZERO\n        for k = 0 to K step B_TILE_LINES:\n            LOAD A_TILES\n            LOAD B_TILES\n            TILE_MATMUL\n        STORE C_TILES\n</code></pre> <p>\u91cd\u70b9\u662f\u8981\u5bf9B\u77e9\u9635\u8fdb\u884creshape</p> <p></p> <p>Note:\u56fe\u4e2d\u7684\u4e00\u4e2a\u5c0f\u65b9\u5757\u4ee3\u886816bit\uff0creshape\u7684\u5b9e\u8d28\u662f\u5bf9B\u77e9\u9635\u8fdb\u884c\u4ee532bit\u4e3a\u5355\u4f4d\u7684\u8f6c\u7f6e</p> <p>\u793a\u4f8b\uff1a</p> <pre><code>for (auto logical_block_id = logical_block_start;\n             logical_block_id &lt; logical_block_end;\n             logical_block_id++) {\n          auto physical_block_id = block_tables_ptr\n              [seq_id * max_num_blocks_per_seq + logical_block_id];\n          auto tokens_in_block =\n              std::min(block_size, context_len - logical_block_id * block_size);\n          auto token_start = logical_block_id * block_size;\n          auto token_end = token_start + tokens_in_block;\n          for (auto token_id = token_start; token_id &lt; token_end; token_id++) {\n            auto block_offset = token_id - token_start;\n            auto k_cache_start = key_cache_ptr +\n                physical_block_id * kv_block_strideN +\n                block_offset * kv_block_strideP + kv_head_id * kv_block_strideH;\n            for (auto i = 0; i &lt; kv_head_group_size(M); i++) {\n                logits[i * PARTITION_SIZE + logits_position] = 0;\n                for (auto hsi(k) = 0; hsi &lt; head_size(K); hsi++) {\n                logits[i * PARTITION_SIZE + logits_position] +=\n                    (float)q_ptr_start[i * head_size + hsi] * (float)k_cache_start[block_offset \n                    * kv_block_strideP + hsi];\n                }\n            }\n            logits_position++;\n          }\n        }\n</code></pre> <p>AMX\u4f18\u5316\u7ed3\u679c\uff1a</p> <pre><code>// A q_ptr_start kv_head_group_size * head_size\n// B k_cache_start block_size * kv_block_strideP\n// reshape_B head_size / (4 / sizeof(cache_t)) * block_size * (4 / sizeof(cache_t)) \n// C logits_ptr kv_head_group_size * PARTITION_SIZE\n// kv_head_group_size = 5\nif (tokens_in_block == block_size)\n{\n// printf(\"kv_head_group_size: %d, head_size: %d, block_size: %d\\n\", kv_head_group_size, head_size, block_size);\n    reshape((uint8_t*)k_cache_start, block_size, head_size * sizeof(cache_t), (uint8_t*)reshape_B, kv_block_strideP * sizeof(cache_t)); // reshape matrix B\n    for (auto j = 0; j &lt; block_size; j += 32) {\n        _tile_zero(6);\n        _tile_zero(7);\n        for (auto k = 0; k &lt; head_size; k += 128 / sizeof(cache_t)) {\n            _tile_loadd(0, q_ptr_start + k, head_size * sizeof(scalar_t)); //\u53c2\u6570\uff08\u76ee\u6807\u5bc4\u5b58\u5668\u7f16\u53f7\uff0c\u7b2c\u4e00\u4e2a\u5934\u5bf9\u5e94\u7684\u5730\u5740\uff0cstride\uff09stride = A\u77e9\u9635\u5217\u4e2a\u6570*\u6bcf\u4e2a\u5143\u7d20\u7684size\n            //\u6b64\u5904load\u7684\u5927\u5c0f\u662f\u4e8b\u5148\u5b9a\u597d\u7684\uff0cAMX\u5bc4\u5b58\u5668\u6700\u591a\u53ef\u4ee5load 1024 byte\uff0c\u4f46\u662f\u6700\u591a16\u884c\uff0c64\u5217\n            _tile_loadd(1, q_ptr_start + k + 64 / sizeof(cache_t), head_size * sizeof(scalar_t));\n            _tile_loadd(2, reshape_B + k * block_size + j * (4 / sizeof(cache_t)), block_size * 4);\n            _tile_loadd(3, reshape_B + k * block_size + (j + 16) * (4 / sizeof(cache_t)), block_size * 4);\n            _tile_loadd(4, reshape_B + (k + 64 / sizeof(cache_t)) * block_size + j * (4 / sizeof(cache_t)), block_size * 4);\n            _tile_loadd(5, reshape_B + (k + 64 / sizeof(cache_t)) * block_size + (j + 16) * (4 / sizeof(cache_t)), block_size * 4);\n\n            _tile_dpbf16ps(6, 0, 2);\n            _tile_dpbf16ps(7, 0, 3);\n            _tile_dpbf16ps(6, 1, 4);\n            _tile_dpbf16ps(7, 1, 5);\n        }\n    _tile_stored(6, logits_ptr + j, PARTITION_SIZE * 4);\n    _tile_stored(7, logits_ptr + j + 16, PARTITION_SIZE * 4);\n    }\n    logits_position += block_size;\n}\n</code></pre> <p>\u5b9e\u9645\u5e94\u7528\u8fc7\u7a0b\u4e2d\u5927\u90e8\u5206\u53ef\u4ee5\u7528AMX\uff0c\u65e0\u6cd5\u6574\u9664\u7684\u90e8\u5206\u7528AVX</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80%20Profiling/","title":"\u6027\u80fd\u5206\u6790\u6280\u672f\u57fa\u7840 Profiling","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80%20Profiling/#introduction","title":"Introduction","text":"<p>Profile Categories\uff1a </p> <ul> <li>System</li> <li>Program</li> </ul> <p>\u7cfb\u7edf\u81ea\u5e26\u7684\u6027\u80fd\u5206\u6790\u5de5\u5177\uff1a</p> <ul> <li>cpufp</li> <li>core-to-core-latency</li> <li>STREAM\uff1a\u6d4b\u91cf\u5185\u5b58\u5e26\u5bbd</li> <li>cpu-micro-benchmark\uff1a\u7528\u4e8e\u9006\u5411CPU\u5fae\u67b6\u6784\u7684\u5de5\u5177</li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80%20Profiling/#cpu-profiling-tool","title":"CPU Profiling Tool","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80%20Profiling/#perf","title":"Perf","text":"<p>Common commands:</p> <ul> <li>perf top</li> <li>perf report</li> <li>perf record</li> <li>perf stat</li> </ul> <pre><code>perf record -F 99 -g cycles.instructions.cache-miss\n</code></pre>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80%20Profiling/#vtune","title":"Vtune","text":"<p>Analysis Types:</p> <ul> <li>hostports</li> <li>threading</li> <li>memory access</li> <li>micro-architecture</li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80%20Profiling/#gpu-profiling-tool","title":"GPU Profiling Tool","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80%20Profiling/#nsight-systems","title":"Nsight Systems","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80%20Profiling/#nsight-compute","title":"Nsight Compute","text":"<p>\u4ee5dgemm_gpu\u4e3a\u4f8b\uff1a</p> <pre><code>mkdir -p nsight_results\nncu --set full --export nsight_results/matmul_profile.ncu-rep --force-overwrite ./dgemm_gpu\n</code></pre>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E6%80%A7%E8%83%BD%E5%88%86%E6%9E%90%E6%8A%80%E6%9C%AF%E5%9F%BA%E7%A1%80%20Profiling/#roofline-model","title":"Roofline Model","text":"<p>computing platform: computational capability(FLOPS) and memory bandwidth</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E6%9C%BA%E5%99%A8%E5%AD%A6%E4%B9%A0%E5%9F%BA%E7%A1%80/","title":"\u673a\u5668\u5b66\u4e60\u57fa\u7840","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/","title":"Introduction of Computer System in HPC","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#chapter-1-operating-system","title":"Chapter 1 Operating System","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#introduction","title":"Introduction","text":"<ul> <li>CPU: \u62bd\u8c61\u6a21\u578b</li> </ul> <p>\u4e0d\u662f\u6240\u6709CPU\u6307\u4ee4\u6240\u7528\u65f6\u95f4\u90fd\u76f8\u540c</p> <ul> <li>Memory\u5c42\u7ea7</li> </ul> <p></p> <p>Operating System is resource abstractor and resource allocator</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#os-events","title":"OS Events","text":"<p>Traps in RISC-V:</p> <ul> <li>Interrupts : external asynchronous events</li> <li>Hardware-Generated</li> <li>some device controller says \"something happened\"</li> <li>Exception: Unusual condition occurring at instruction run time</li> <li>Software-Generated</li> <li>e.g. a division by zero</li> </ul> <p>When a trap occurs, the control flow is switched to its handler:</p> <p></p> <p>\u6b64\u6b65\u9aa4\u6709\u64cd\u4f5c\u7cfb\u7edf\u5b8c\u6210</p> <p>\ud83e\udd14 Q: What do we need to separate the user and kernel space?</p> <p>\ud83d\ude0f A: Add a Mode Bit(\u4e00\u4e2a\u7535\u8def) to keep track of the current privilege level(\u7279\u6743\u7b49\u7ea7)</p> <p>System calls: a special kind of trap</p> <p>When a user program needs to do something to do something privileged, it calls a system call.</p> <p></p> <p>\u6bd4\u5982write: \u628a\u7ed3\u679c\u6253\u5370\u5728\u547d\u4ee4\u884c</p> <p>main-&gt;printf(GNU C Library)-&gt;write</p> <p>strace\u547d\u4ee4:\u8ffd\u8e2asystem call\u7684\u8fc7\u7a0b</p> <p>Timers: \u9632\u6b62\u7a0b\u5e8f\u5361\u6b7b\uff0c\u4fdd\u8bc1\u591a\u4e2a\u8fdb\u7a0b\u8f6e\u6d41\u6267\u884c</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#process","title":"Process \u8fdb\u7a0b","text":"<p>A process is a program in execution, a unit of resource allocation and collection.</p> <p><code>file hello</code>:\u67e5\u770bhello\u6587\u4ef6\u7684\u5c5e\u6027</p> <p>ELF\u683c\u5f0f: Executable and Linkable Format</p> <p></p> <p>Process Address Space:</p> <p></p> <p>Stack Frame</p> <p>\u6267\u884cSystem call\u65f6\uff0c\u8c03\u7528\u5185\u6838\u6001\u65f6\u4e0d\u4f1a\u4fdd\u5b58\u5230\u7528\u6237\u6808\u7684\u6808\u5e27</p> <p>e.g. printf\u8c03\u7528write\u65f6\uff0cwrite \u4e0d\u4f1a\u4fdd\u5b58\u5230\u7528\u6237\u6808\u7684\u6808\u5e27\u4e2d</p> <p>sp fp:\u5b9a\u4f4d\u51fd\u6570\u5728\u6808\u4e2d\u7684\u6808\u5e27\u8303\u56f4,\u4e5f\u53ef\u4ee5\u67e5\u770b\u51fd\u6570\u7684\u8c03\u7528\u94fe\u5173\u7cfb</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#process-schedule","title":"Process Schedule \u8fdb\u7a0b\u8c03\u5ea6","text":"<ul> <li> <p>Non-preemptive: The process must finish its execution before the OS can schedule another process.(\u975e\u62a2\u5360\u5f0f\uff0c\u522b\u7684\u8fdb\u7a0b\u4e0d\u80fd\u62a2\u5360CPU)</p> </li> <li> <p>preemptive: The OS can interrupt a process to schedule another one.(\u62a2\u5360\u5f0f)</p> </li> </ul> <p>Schedule Algorithm:</p> <ul> <li>Round Robin\uff1a\u65f6\u95f4\u7247\u8f6e\u8f6c\uff0c\u8f6e\u6d41\u8dd1</li> <li>Priority-based:\u57fa\u4e8e\u4f18\u5148\u7ea7\uff0c\u901a\u8fc7<code>nice</code>\u6307\u4ee4\u53ef\u8c03\u9ad8\u4f18\u5148\u7ea7 </li> </ul> <p>Also decide which process to run on which core.(Controlled by Core Affinity) \u7ed1\u6838\u7ed1\u7684\u662fCPU\u548c\u7ebf\u7a0b</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#process-switch","title":"Process Switch \u8fdb\u7a0b\u5207\u6362","text":"<p>\u5207\u6362Context\u7684\u72b6\u6001\uff1a\u8fdb\u7a0b\u51fa\u6765\u65f6\u4fdd\u5b58\u4e0a\u4e0b\u6587\uff0c\u56de\u53bb\u65f6\u6062\u590d\u4e0a\u4e0b\u6587</p> <p>PCB:\u8fdb\u7a0b\u63a7\u5236\u5757\uff0c\u4e00\u79cd\u7ed3\u6784\uff0c\u4fdd\u5b58\u4e86PID\u4ee5\u53cacontext\u7684\u72b6\u6001</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#inter-process-communication-ipc","title":"Inter-Process Communication (IPC) \u8de8\u8fdb\u7a0b\u4f20\u8f93","text":"<p>\u5c06\u53ef\u4ee5\u540c\u65f6\u8fdb\u884c\u7684\u8fdb\u7a0b\u653e\u5230\u591a\u4e2aCPU\u6838\u5fc3\u4e0a\u5e76\u884c\uff0c\u4f46\u662f\u64cd\u4f5c\u7cfb\u7edf\u4e0d\u4f1a\u8ba9\u4e00\u4e2a\u8fdb\u7a0b\u8bbf\u95ee\u53e6\u4e00\u4e2a\u8fdb\u7a0b\u7684\u5185\u5b58\uff0c\u56e0\u6b64\u5404\u4e2a\u8fdb\u7a0b\u7684\u6570\u636e\u65e0\u6cd5\u7d2f\u52a0</p> <p>\u5982\u4f55\u5b9e\u73b0\uff1a</p> <ul> <li>Message Passing: \u8ba9\u4e00\u4e2a\u8fdb\u7a0b\u5411\u4e3b\u8fdb\u7a0b\u53d1\u9001\u6570\u636e\u7528MPI\u6536\u53d1\u6570\u636e\uff0c\u901a\u8fc7\u4e00\u4e2amessage queue\u8fdb\u884c\u4f20\u8f93</li> <li>Shared Memory:\u64cd\u4f5c\u7cfb\u7edf\u63d0\u4f9b\u4e00\u5757\u5185\u5b58\uff0c\u4f7f\u5f97\u4e24\u4e2a\u8fdb\u7a0b\u53ef\u4ee5\u540c\u65f6\u8bbf\u95ee\u8fd9\u540c\u4e00\u5757\u5185\u5b58</li> <li>Signal,Pipe,Socket,...</li> </ul> <p>Disadvantage of IPC:</p> <p></p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#thread","title":"Thread \u7ebf\u7a0b","text":"<p> A thread is a basic unit of execution within a process. Each thread has its own:</p> <ul> <li>Thread ID</li> <li>Program counter</li> <li>Register set</li> <li>Stack</li> </ul> <p>Shares the following with other threads within the same process:</p> <ul> <li> <p>Code section</p> </li> <li> <p>Data section</p> </li> <li> <p>The heap (dynamically allocated memory)</p> </li> <li> <p>Open files and signals</p> </li> </ul> <p>\u7ebf\u7a0b\u4e4b\u95f4\u7684\u5730\u5740\u7a7a\u95f4\u3001\u5185\u5b58\u662f\u76f8\u540c\u7684\uff0c\u56e0\u6b64\u4e92\u76f8\u4e4b\u95f4\u53ef\u4ee5\u5171\u4eab</p> <p></p> <p>\u5b9e\u73b0\uff1aOPENMP</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#virtual-memory","title":"Virtual Memory","text":"<p>\u5185\u5b58\u5206\u9875\uff1a4KB/Page</p> <p>\u865a\u62df\u5185\u5b58\uff1a\u8ba9\u6bcf\u4e00\u4e2a\u8fdb\u7a0b\u8ba4\u4e3a\u81ea\u5df1\u6709\u65e0\u9650\u5927\u7684\u5730\u5740\u7a7a\u95f4\uff08\u865a\u62df\u5730\u5740\uff09\uff0c\u64cd\u4f5c\u7cfb\u7edf\u9700\u8981\u5c06\u865a\u62df\u5730\u5740\u6620\u5c04\u6210\u7269\u7406\u5730\u5740</p> <p>\u8fdb\u7a0b\u8981\u8bbf\u95ee\u7684\u5730\u5740\u5c31\u662f\u865a\u62df\u5730\u5740\uff0c\u865a\u62df\u5730\u5740-&gt;OS-&gt;\u7269\u7406\u5730\u5740</p> <p>\u9875\u8868\uff1aOS\u901a\u8fc7\u7ed9\u6bcf\u4e2a\u8fdb\u7a0b\u7ef4\u62a4\u4e0d\u540c\u7684\u9875\u8868\u5b9e\u73b0\u865a\u62df\u5730\u5740\u5230\u7269\u7406\u5730\u5740\u7684\u8f6c\u6362</p> <p>TLB\uff1a\u7f13\u5b58\u8fd1\u671f\u4f7f\u7528\u8fc7\u7684\u865a\u62df\u5730\u5740\u4e0e\u7269\u7406\u5730\u5740\u7684\u6620\u5c04\u5173\u7cfb\uff0c\u907f\u514d\u6bcf\u6b21\u8bbf\u5b58\u90fd\u67e5\u770b\u9875\u8868\uff0c\u52a0\u5feb\u901f\u5ea6</p> <p>\u865a\u62df\u5185\u5b58\u662f\u4ecb\u4e8e\u8fdb\u7a0b\u548c\u7269\u7406\u5185\u5b58\u7684\u53e6\u4e00\u4e2a\u62bd\u8c61\u5c42\uff0c\u53ef\u4ee5\u4fdd\u8bc1\uff1a</p> <p>\u2022 Isolation: Each process has its own address space.</p> <p>\u2022 Protection: Deny the process from accessing other processes\u2019 or</p> <p>privileged memory.</p> <p>\u2022 Efficiency: Support Copy-on-Write, can run a partially loaded program.</p> <p>\u7a0b\u5e8f\u9996\u5148\u8bbf\u95ee\u865a\u62df\u5185\u5b58\uff0c\u5728\u5bf9\u5e94\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\uff0c\u53ef\u4ee5\u7b80\u5316\u7a0b\u5e8f\u8bbf\u95ee\u4e3b\u5b58\u7684\u590d\u6742\u6027\uff0c\u53ef\u4ee5\u53ea\u52a0\u8f7d\u4e00\u90e8\u5206\u5185\u5b58\u5230\u7a0b\u5e8f\u4e2d</p> <p>Page\uff1a\u865a\u62df\u5185\u5b58\u4e2d\u7684\u6700\u5c0f\u5185\u5b58\u5355\u5143(4kb)</p> <p>Frame\uff1a\u7269\u7406\u5185\u5b58\u4e2d\u7684\u6700\u5c0f\u5185\u5b58\u5355\u5143(4kb)</p> <p>Memory Mapping\uff1a</p> <ul> <li>\u6570\u636e\u7ed3\u6784\uff1aPage Table</li> <li>\u786c\u4ef6\u652f\u6301\uff1aMMU(Memory Management Unit)</li> <li>\u529f\u80fd\uff1aTranslate virtual page to physical frame</li> </ul> <p>Page Fault: \u865a\u62df\u5185\u5b58\u6ca1\u6709\u6620\u5c04\u5230\u7269\u7406\u5185\u5b58\u4e0a\u65f6\uff08\u7269\u7406\u5185\u5b58\u5df2\u6ee1\uff09\u4f1a\u51fa\u73b0page fault\uff0c\u64cd\u4f5c\u7cfb\u7edf\u6682\u65f6\u4f1a\u5c06\u5176\u6620\u5c04\u5230\u78c1\u76d8\u4e2d\uff0c\u7136\u540e\u9700\u8981\u65f6\u518d\u628apage\u4ece\u78c1\u76d8\u4e2d\u52a0\u8f7d\u5230\u7269\u7406\u4e2d\uff0c\u7136\u540e\u66f4\u65b0page table\uff0c\u8fd9\u6837\u5c31\u5efa\u7acb\u4e86\u6620\u5c04\u5173\u7cfb</p> <p>TLB\uff1a\u64cd\u4f5c\u7cfb\u7edf\u4f1a\u5c06\u7ecf\u5e38\u7528\u5230\u7684\u6620\u5c04\u5173\u7cfb</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#chapter-2","title":"Chapter 2 \u8ba1\u7b97\u673a\u4f53\u7cfb\u7ed3\u6784","text":""},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#hpc","title":"HPC\u4e2d\u7684\u8f6f\u4ef6\u6808","text":"<ul> <li>Application</li> <li>High-level I/O Library</li> <li>I/O Middleware</li> <li>I/O Forwarding</li> <li>Parallel File System</li> <li>I/O Hardware</li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#x86-64-registers","title":"X86-64 Registers","text":"<ul> <li>Integer registers:16\u4e2a\u901a\u7528\u5bc4\u5b58\u5668\uff0c\u6bcf\u4e2a64bits</li> <li>SIMD registers</li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#c","title":"\u5728C\u7a0b\u5e8f\u4e2d\u5d4c\u5165\u6c47\u7f16\u8bed\u8a00","text":"<ul> <li>Extended ASM\uff1a</li> </ul> <p>e.g. This code copies src to dst and add 1 to dst</p> <pre><code>int src = 1, dst;\nasm (\"mov %1, %0\\n\\tadd $1, %0\" : \"=r\" (dst) : \"r\" (src));\nprintf(\"%d\\n\", dst);\n</code></pre> <ul> <li>Compiler Instrisics</li> </ul> <pre><code>_mm_add_ps(), _mm_crc32_u16(), _mm_prefetch()\n</code></pre>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#_1","title":"\u5fae\u67b6\u6784","text":"<p>\u5fae\u67b6\u6784\u662f\u5bf9ISA\u7684\u5177\u4f53\u5b9e\u73b0</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#_2","title":"\u591a\u6838\u5904\u7406\u5668","text":"<p>CPU\u6027\u80fd\u548cCPU\u9891\u7387\u76f4\u63a5\u76f8\u5173\uff0c\u670d\u52a1\u5668\u4e0a\u7684CPU\u6bd4\u666e\u901a\u5bb6\u7528CPU\u9891\u7387\u8981\u4f4e</p> <p>\u64cd\u4f5c\u7cfb\u7edf\u5c06\u7ebf\u7a0b\u53d1\u9001\u5230CPU\u7684\u786c\u4ef6\uff0cCPU\u6838\u5fc3\u6267\u884c\u6307\u4ee4\uff0c\u5206\u6210\u56db\u4e2a\u9636\u6bb5\uff1aFetch,Decode,Execute,Commit</p> <p>\u6b63\u5e38\u6267\u884c\uff1a</p> <p> \u786c\u4ef6\u4e0d\u53ef\u907f\u514d\u7684\u4f1a\u6d6a\u8d39\uff0c\u800c\u4e14CPI=0.25\uff08\u901f\u5ea6\u592a\u6162\uff09</p> <p>Solution\uff1a\u6d41\u6c34\u7ebf\uff08Pipeline\uff09</p> <p></p> <p>\u6d41\u6c34\u7ebf\u7684\u95ee\u9898\uff1a</p> <ul> <li>\u6570\u636e\u51b2\u7a81\uff1a\u6307\u4ee4\u524d\u540e\u6709\u6570\u636e\u4f9d\u8d56</li> <li>\u63a7\u5236\u51b2\u7a81\uff1a\u9700\u8981\u8df3\u8f6c\uff0c\u4f46\u8df3\u8f6c\u5730\u5740\u672a\u77e5</li> <li>\u7ed3\u6784\u51b2\u7a81\uff1a\u786c\u4ef6\u8d44\u6e90\u88ab\u5176\u4ed6\u6307\u4ee4\u5360\u7528\uff0c\u53ea\u80fd\u7b49\u5f85</li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#ramrandom-access-memory","title":"RAM(Random Access Memory)","text":"<p>\u5206\u7c7b\uff1aSRAM(\u5feb)\uff0cDRAM(\u9700\u8981\u5237\u65b0)</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#cache","title":"Cache","text":"<ul> <li> <p>SRAM-based</p> </li> <li> <p>\u548c\u5185\u5b58\u7684\u4ea4\u4e92\u65f6\u7684\u6570\u636e\u5927\u5c0f\uff1acacheline</p> </li> <li> <p>\u5185\u5b58\u4e0e\u7f13\u5b58\u7684\u6620\u5c04\u65b9\u5f0f\uff1a\u968f\u673a\u6620\u5c04/\u76f4\u63a5\u6620\u5c04/\u591a\u8def\u7ec4\u76f8\u8054</p> </li> <li> <p>Cache Usage\uff1a</p> </li> </ul> <p></p> <ul> <li>\u5229\u7528Locality\u6700\u5927\u5316\u5229\u7528Cache\u5b9e\u73b0\u4f18\u5316</li> <li>\u591a\u6838\u7684Cache\u5c42\u6b21\u67b6\u6784\uff1a</li> </ul> <p></p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#_3","title":"\u6d41\u6c34\u7ebf\u7684\u51b2\u7a81\u89e3\u51b3","text":"<ul> <li> <p>\u5206\u652f\u9884\u6d4b\u548c\u63a8\u6d4b\u6267\u884c\uff0c\u5c3d\u91cf\u51cf\u5c11\u5206\u652f\u5224\u65ad</p> </li> <li> <p>\u4e71\u5e8f\u6267\u884c\uff1a\u63d0\u9ad8\u786c\u4ef6\u5229\u7528\u7387\uff0c\u4e3a\u907f\u514d\u6709\u5047\u7684\u6570\u636e\u4f9d\u8d56\uff08\u5982\u4e0b\uff09\uff0c\u9700\u8981\u8fdb\u884c\u5bc4\u5b58\u5668\u7684\u91cd\u547d\u540d</p> </li> </ul> <pre><code>//\u5b57\u6bcd\u5747\u4ee3\u8868\u5bc4\u5b58\u5668\nc =  a + b\nc =  d + f\n</code></pre> <ul> <li>\u590d\u6742\u6307\u4ee4\u96c6\u8f6c\u5316\u6210\u5fae\u7801</li> </ul>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#cpu","title":"CPU\u7684\u524d\u7aef\u548c\u540e\u7aef","text":"<p>\u524d\u7aef\u529f\u80fd\uff1a\u53d6\u5740\u548c\u8bd1\u7801</p> <p>\u540e\u7aef\u529f\u80fd\uff1a\u5206\u914d\uff0c\u52a8\u6001\u8c03\u5ea6\uff0c\u6267\u884c\uff0c\u987a\u5e8f\u5b8c\u6210\uff08\u6307\u4ee4\u91cd\u6392\u5e8f\uff09</p> <p></p> <p></p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#_4","title":"\u8d85\u7ebf\u7a0b","text":"<p>\u540c\u6b65\u591a\u7ebf\u7a0b\uff1a\u591a\u51fa\u6765\u7684\u7ebf\u7a0b\u90fd\u662f\u8d85\u7ebf\u7a0b </p> <p>e.g. 8\u6838\u5fc316\u7ebf\u7a0b </p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#simdsingle-instruction-multiple-data","title":"SIMD(Single Instruction Multiple Data)","text":"<p>\u62d3\u5bbd\u5bc4\u5b58\u5668\uff0c\u8fd9\u6837\u4e00\u6761\u6307\u4ee4\u5c31\u53ef\u4ee5\u5c06\u591a\u4e2a\u7ed3\u679c\u4e00\u8d77\u7b97\u51fa\u6765</p> <p></p> <p>\u4f18\u70b9\uff1a\u6027\u80fd\u63d0\u5347</p> <p>\u901a\u8fc7mask\u8fdb\u884cSIMD\uff0c\u53ef\u4ee5\u5b9e\u73b0\u53ea\u8ba1\u7b97\u5176\u4e2d\u51e0\u4f4d</p> <p>SIMD\u652f\u6301\u4e0d\u8fde\u7eed\u7684\u8bbf\u5b58</p>"},{"location":"HPC%20101%20%E8%B6%85%E7%AE%97%E7%9F%AD%E5%AD%A6%E6%9C%9F/%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%B3%BB%E7%BB%9F%E6%A6%82%E8%AE%BA/#multicore-and-multi-socket-memory","title":"Multicore and Multi-socket Memory","text":"<p>cache\u4e00\u81f4\u6027\uff1a\u4fee\u6539cache\uff0c\u9700\u8981\u901a\u77e5\u5176\u4ed6core\uff0c\u5176\u4ed6core\u9700\u8981\u66f4\u65b0cache\uff0c\u800c\u4e14\u901a\u4fe1\u7684\u5f00\u9500\u4e5f\u6bd4\u8f83\u5927</p> <p>NUMA\u67b6\u6784\uff1a\u975e\u7edf\u4e00\u5185\u5b58\u8bbf\u95ee</p> <p></p>"},{"location":"Missing_Semester/Shell_basis/","title":"Shell \u57fa\u7840","text":"<p>\u6458\u8981</p> <p>\u200b   \u8fd9\u91cc\u4e3b\u8981\u4ecb\u7ecd\u4e86\u4e00\u4e9bShell\u7684\u57fa\u672c\u6982\u5ff5\u548c\u4e00\u4e9b\u57fa\u7840\u7684Shell\u547d\u4ee4</p> <p>\u200b   \u53c2\u8003\u8d44\u6599\uff1a\u7afa\u53ef\u6862\u5b66\u9662\u5b9e\u7528\u6280\u80fd\u62fe\u9057 Lec1</p>"},{"location":"Missing_Semester/Shell_basis/#1-shell","title":"1 \u4ec0\u4e48\u662fShell\uff1f","text":""},{"location":"Missing_Semester/Shell_basis/#11-shellterminal","title":"1.1 Shell\u4e0eTerminal","text":"<p>1.1.1 \u4ec0\u4e48\u662fTerminal</p> <p>\u8d77\u6e90:</p> <ul> <li>\u65e9\u671f\u8ba1\u7b97\u673a\u53ea\u6709\u952e\u76d8\uff0c\u6ca1\u6709\u684c\u9762\u73af\u5883</li> <li>\u7528\u4e8e\u8f93\u5165\u6570\u636e\uff0c\u8fd0\u884c\u7a0b\u5e8f\uff0c\u5e76\u83b7\u5f97\u8f93\u51fa\u7684\u201c\u7ec8\u7aef\u201d</li> </ul> <p>\u73b0\u4eca:</p> <ul> <li>Terminal Emulator\uff0c\u6a21\u62df\u4f20\u7edf\u7ec8\u7aef\u7684\u884c\u4e3a</li> <li>\u4e00\u4e2a\u5e94\u7528\u7a0b\u5e8f\uff0c\u63d0\u4f9b\u4e86\u4e00\u4e2a\u7a97\u53e3\uff0c\u548c\u8f93\u5165\u8f93\u51fa\u4ea4\u4e92\u7684\u529f\u80fd</li> <li>\u5185\u90e8\u8fd0\u884c\u7684\u662fShell\uff0cShell\u624d\u662f\u6267\u884c\u547d\u4ee4\u5f97\u5230\u8f93\u51fa\u7684\u4e1c\u897f</li> </ul> <p>1.1.2 \u4ec0\u4e48\u662fShell</p> <ul> <li>\"\u58f3\u5c42\",\u4e5f\u662f\u4e00\u4e2a\u7a0b\u5e8f,\u662f\u7528\u6237\u4e0e\u7cfb\u7edf\u5185\u6838\u4ea4\u4e92\u7684\u754c\u9762</li> <li>\u8d1f\u8d23\u63a5\u6536\u5e76\u89e3\u6790\u8f93\u5165,\u4ea4\u7ed9\u66f4\u5e95\u5c42(OS)\u6765\u6267\u884c,\u5e76\u8fd4\u56de\u8f93\u51fa</li> </ul> <p>\u5e38\u89c1\u7684Shell:</p> <ul> <li>Windows: cmd.exe/Powershell 5</li> <li>*nix:</li> <li>sh:Bourne Shell(\u6700\u65e9, \u6700\u7ecf\u5178)</li> <li>bash:Bourne Again Shell(\u6700\u5e38\u7528)<ul> <li>\u5927\u90e8\u5206Linux\u53d1\u884c\u7248\u9ed8\u8ba4\u7684shell</li> </ul> </li> <li>zsh:Z Shell(\u529f\u80fd\u5f3a\u5927, \u53ef\u9ad8\u5ea6\u81ea\u5b9a\u4e49)</li> <li>fish:Friendly Interactive Shell</li> </ul> <p>\u5173\u4e8eShell\u7684\u4e00\u4e9b\u63a8\u8350\u914d\u7f6e:</p> <p></p>"},{"location":"Missing_Semester/Shell_basis/#2-shell","title":"2 \u57fa\u7840Shell\u547d\u4ee4","text":""},{"location":"Missing_Semester/Shell_basis/#21","title":"2.1 \u8def\u5f84\u76f8\u5173\u547d\u4ee4","text":"<ul> <li>pwd\uff1a\u83b7\u53d6\u5f53\u524d\u8def\u5f84(print working directory)</li> <li>cd path\uff1a\u5207\u6362\u8def\u5f84(chage directory)</li> <li>path\u53ef\u4ee5\u662f\u201c\u76f8\u5bf9\u8def\u5f84\u201d\u6216\u8005\u201c\u7edd\u5bf9\u8def\u5f84\u201d</li> <li>path\u4e2d ~ \u4ee3\u8868home\uff0c. ** \u4ee3\u8868\u5f53\u524d\u8def\u5f84\uff0c. .**\u4ee3\u8868\u4e0a\u4e00\u7ea7\u8def\u5f84</li> </ul> <p>\u4e00\u4e2a\u4f8b\u5b50\uff1a</p> <p></p>"},{"location":"Missing_Semester/Shell_basis/#22","title":"2.2 \u6587\u4ef6/\u76ee\u5f55\u64cd\u4f5c\u547d\u4ee4","text":"<p>\u793a\u4f8b</p> <ul> <li>find  .  -name  a.c</li> <li>find  .  -name  '*.c'</li> </ul>"},{"location":"Missing_Semester/Shell_basis/#23","title":"2.3 \u6587\u4ef6\u5185\u5bb9\u67e5\u770b\u547d\u4ee4","text":""},{"location":"Missing_Semester/Shell_basis/#24","title":"2.4 \u5176\u4ed6\u547d\u4ee4","text":"<p>\u793a\u4f8b</p> <ul> <li>man ls</li> <li>echo hello world</li> </ul> <p>Tip</p> <p>\u200b   Windows\u662f\u901a\u8fc7\u540e\u7f00\u540d\u5224\u65ad\u6587\u4ef6\u662f\u5426\u53ef\u6267\u884c(e.g. .exe/.bat/.com)\uff0c\u4f46\u662fLinux\u548cmac OS\u4e0d\u80fd\u901a\u8fc7\u540e\u7f00\u540d\u5224\u65ad\uff0c\u9700\u8981\u8bbe\u7f6e\u53ef\u6267\u884c\u4f4d\uff0c   \u6b64\u65f6\u9700\u8981\u901a\u8fc7chmod\u66f4\u6539\u6587\u4ef6\u4e3a\u53ef\u6267\u884c</p>"},{"location":"Missing_Semester/Shell_basis/#25","title":"2.5 \u91cd\u5b9a\u5411\u548c\u7ba1\u9053","text":""},{"location":"Missing_Semester/Shell_basis/#251","title":"2.5.1 \u91cd\u5b9a\u5411","text":""},{"location":"Missing_Semester/Shell_basis/#252","title":"2.5.2 \u7ba1\u9053","text":"<ul> <li>\u901a\u8fc7\u7ba1\u9053(pipe)\u53ef\u4ee5\u5c06\u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u51fa\u4f5c\u4e3a\u53e6\u4e00\u4e2a\u547d\u4ee4\u7684\u8f93\u5165</li> <li>\u4f7f\u7528\u7ba1\u9053\u64cd\u4f5c\u7b26 | \uff0c\u5c06\u5de6\u4fa7\u547d\u4ee4\u7684stdout\u8fde\u63a5\u5230\u53f3\u4fa7\u547d\u4ee4\u7684stdin</li> <li>\u901a\u8fc7\u7ba1\u9053\u53ef\u4ee5\u5c06\u591a\u4e2a\u547d\u4ee4\u8fde\u63a5\u8d77\u6765\uff0c\u5f62\u6210\u4e00\u4e2a\u547d\u4ee4\u5e8f\u5217\uff0c\u53ef\u4ee5\u901a\u8fc7\u4e00\u884c\u547d\u4ee4\u6765\u5b8c\u6210\u76f8\u5bf9\u590d\u6742\u7684\u52a8\u4f5c</li> </ul> <p>!!! Note \"\u5e38\u89c1\u7528\u6cd5\"</p> <ul> <li>some cmd | tail -n lines\uff1a\u53ea\u8f93\u51fa\u6700\u540elines\u884c</li> </ul> <p>e.g. ls | head -n 10 | tail -n 5\uff1a\u8f93\u51fa\u7b2c5~10\u4e2a\u6587\u4ef6\u540d</p> <ul> <li>some cmd | less\uff1a\u5206\u9875\u8f93\u51fa</li> <li>some cmd | grep pattern\uff1a\u5728\u8f93\u51fa\u4e2d\u67e5\u627e\u5339\u914dpattern\u7684\u884c</li> <li>\u4e0ecut / sort / uniq / awk\u7b49\u547d\u4ee4\u642d\u914d\uff0c\u5904\u7406\u6587\u672c\u6570\u636e</li> <li>. . .</li> </ul>"},{"location":"Missing_Semester/Shell_basis/#26","title":"2.6 \u73af\u5883\u53d8\u91cf","text":"<p>\u793a\u4f8b</p> <ul> <li> <p>export GOOD_MORNING_MY_NEIGHBORS = \"hey\"</p> </li> <li> <p>unset GOOD_MORNING_MY_MEIGHBORS</p> </li> </ul>"},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/","title":"Chapter 1 Solving Linear Equations $Ax = b$","text":""},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#_1","title":"\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7684\u51e0\u4f55\u8868\u793a","text":"<p>\u4e3e\u4f8b\uff1a \u5bf9\u7ebf\u6027\u65b9\u7a0b\u7ec4$\\begin{cases} 2x-y=0\\-x+2y=3\\end{cases}$\uff0c\u7528\u7cfb\u6570\u77e9\u9635\u5c31\u53ef\u4ee5\u8868\u793a\u4e3a$\\begin{bmatrix} 2&amp;-1 \\ -1&amp;2 \\end{bmatrix}\\begin{bmatrix} x\\y \\end{bmatrix} = \\begin{bmatrix} 0\\3 \\end{bmatrix}$\uff0c\u4e5f\u5c31\u662f$Ax=b$(dot product)\u7684\u5f62\u5f0f \u884c\u56fe\u50cf(Row Picture)\u8868\u793a\u5982\u4e0b\uff1a</p> <p></p> <p>\u4e0a\u9762\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4\u4e5f\u53ef\u4ee5\u8868\u793a\u6210\u7ebf\u6027\u7ec4\u5408(Linear Conbination)\u7684\u5f62\u5f0f\uff1a $$ x\\begin{bmatrix}2\\-1 \\end{bmatrix} + y\\begin{bmatrix} -1\\2 \\end{bmatrix} = \\begin{bmatrix} 0\\3 \\end{bmatrix} $$ \u5217\u56fe\u50cf(Column Picture)\u8868\u793a\u5982\u4e0b\uff1a(\u6c42\u89e3\u53ef\u5f97$x=1,y=2$)</p> <p></p> <p>\u540c\u7406\uff0c\u5bf9\u4e8e\u4e0b\u9762\u7684\u4e09\u5143\u65b9\u7a0b\u7ec4\uff1a$\\begin{cases} 2x-y=0 \\ -x+2y-z=-1 \\ -3y+4z=4 \\end{cases}$\uff0c$A=\\begin{bmatrix} 2&amp;-1&amp;0 \\ -1&amp;2&amp;-1 \\ 0&amp;-3&amp;4 \\end{bmatrix},b=\\begin{bmatrix} 0\\-1\\4\\end{bmatrix}$ \u7ebf\u6027\u7ec4\u5408\u7684\u5f62\u5f0f\u4e3a\uff1a $$ x\\begin{bmatrix} 2\\-1\\0 \\end{bmatrix} + y\\begin{bmatrix} -1\\2\\4 \\end{bmatrix} +z\\begin{bmatrix} 0\\-1\\4 \\end{bmatrix} = \\begin{bmatrix} 0\\-1\\4 \\end{bmatrix} $$</p> <p>\u601d\u8003</p> <p>\u200b   1. \u5bf9\u4efb\u610f\u7684$b$\uff0c\u662f\u5426\u90fd\u80fd\u6c42\u89e3$Ax=b$ \uff1f</p> <p>\u200b   2. \u8fd9\u4e9b\u5217\u7684\u7ebf\u6027\u7ec4\u5408\u80fd\u5426\u8986\u76d6\u6574\u4e2a\u7ebf\u6027\u7a7a\u95f4\uff1f</p> <p>\u5b9a\u4e49\uff1a\u82e5\u77e9\u9635\u6240\u6709\u5217\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\u53ef\u4ee5\u8986\u76d6\u6574\u4e2a\u7ebf\u6027\u7a7a\u95f4\uff0c\u5219\u79f0\u8be5\u77e9\u9635\u7684\u5217\u5411\u91cf\u7ebf\u6027\u65e0\u5173\uff1b\u82e5\u5b58\u5728\u67d0\u4e00\u5217\u5411\u91cf\u53ef\u4ee5\u7528\u5176\u4ed6\u5217\u5411\u91cf\u7ebf\u6027\u8868\u793a\uff0c\u5219\u79f0\u8be5\u77e9\u9635\u7684\u5217\u5411\u91cf\u7ebf\u6027\u76f8\u5173</p> <p>\u82e5$A$\u77e9\u9635\u7684\u5217\u5411\u91cf\u7ebf\u6027\u65e0\u5173\uff0c\u5219$Ax=0$\u5f53\u4e14\u4ec5\u5f53$x$\u662f\u96f6\u5411\u91cf</p> <p>\u56e0\u6b64$Ax=b$\u53ef\u4ee5\u7528\u7ebf\u6027\u7ec4\u5408\u7684\u65b9\u6cd5\u8fdb\u884c\u8ba1\u7b97\uff0c\u4f8b\u5982  $$ \\begin{bmatrix} 2&amp;5 \\ 1&amp;3 \\end{bmatrix} \\begin{bmatrix} 1 \\ 2 \\end{bmatrix} = 1\\begin{bmatrix} 2 \\ 1 \\end{bmatrix} + 2\\begin{bmatrix} 5 \\ 3 \\end{bmatrix} = \\begin{bmatrix} 12\\7 \\end{bmatrix} $$ $Ax$\u7684\u672c\u8d28\u5c31\u662f\u5217\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u6240\u6709\u5217\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\u79f0\u4e3a\u5217\u7a7a\u95f4</p> <p>\u8bfe\u7a0b\u8d44\u6e90\uff1a</p> <p>\u5b98\u65b9\u7ed9\u51fa\u7684\u8bfe\u5802\u7b14\u8bb0</p> <p>\u8bfe\u5802\u4f5c\u4e1a</p> <p>\u4f5c\u4e1a\u7b54\u6848</p> <p>\u4e60\u9898\u8bb2\u89e3</p>"},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#_2","title":"\u77e9\u9635\u6d88\u5143","text":""},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#_3","title":"\u9ad8\u65af\u6d88\u5143\u6cd5\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4","text":"<p>\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4$\\begin{cases} x+2y+z=2 \\ 3x+8y+z=12 \\4y+z=2 \\end{cases}$\uff0c\u5c06\u6b64\u65b9\u7a0b\u7ec4\u8868\u793a\u6210$Ax=b$\u7684\u5f62\u5f0f\uff0c\u5219$ A=\\begin{bmatrix} 1&amp;2&amp;1 \\ 3&amp;8&amp;1 \\ 0&amp;4&amp;1 \\end{bmatrix}$\uff0c\u90a3\u4e48\u5982\u4f55\u901a\u8fc7\u6d88\u5143\u6cd5\u6765\u6c42\u89e3\u7ebf\u6027\u65b9\u7a0b\u7ec4\u5462\uff1f</p> <p>\u6280\u5de7</p> <p>\u200b   \u6d88\u5143\u65f6\u4e00\u822c\u5c06\u7cfb\u6570\u4e3a1\u7684\u4f18\u5148\u5f53\u4f5c\u4e3b\u5143\uff0c\u4e14\u4e3b\u5143\u4e0d\u80fd\u4e3a0</p> <p>Step1\uff1a\u6d88\u5143(Elimination) $$ A \\overset{R_2-3R_1}{\\longrightarrow} \\begin{bmatrix} 1&amp;2&amp;1 \\ 0&amp;2&amp;-2 \\0&amp;4&amp;1 \\end{bmatrix} \\overset{R_3-2R_2}{\\longrightarrow} \\begin{bmatrix} 1&amp;2&amp;1 \\ 0&amp;2&amp;-2 \\ 0&amp;0&amp;5 \\end{bmatrix}(U) $$</p> <p>\u6d88\u5143\u5931\u6548\u7684\u60c5\u51b5</p> <p>\u200b   \u5982\u679c\u7ecf\u8fc7\u6d88\u5143\u65e0\u6cd5\u5f97\u5230\u4e09\u4e2a\u4e3b\u5143\uff0c\u4e5f\u5c31\u662f\u67d0\u4e2a\u4e3b\u5143\u4e3a0\uff0c\u53ef\u4ee5\u5c1d\u8bd5\u901a\u8fc7\u884c    \u53d8\u6362\u4f7f\u5f97\u5bf9\u89d2\u7ebf\u4e0a\u7684\u4e3b\u5143\u4e3a\u975e\u96f6\u5143\u7d20\uff0c\u5982\u679c\u6700\u540e\u4e00\u884c\u518d\u4e5f\u6ca1\u6709\u975e0\u5143\u7d20\uff0c\u5219\u6b64\u65b9\u7a0b\u7ec4\u65e0\u89e3\u6216\u6709\u591a\u4e2a\u89e3</p> <p>Step 2\uff1a\u56de\u4ee3(Back Substitution)</p> <p>\u5c06$b$\u5e26\u5165\u5230\u4e0a\u8ff0\u6d88\u5143\u8fc7\u7a0b\uff0c\u5219\u6709 $$ \\begin{bmatrix} A&amp;b \\end{bmatrix} \\overset{R_2-3R_1}{\\longrightarrow} \\begin{bmatrix} 1&amp;2&amp;1&amp;2 \\ 0&amp;2&amp;-2&amp;6 \\0&amp;4&amp;1&amp;2 \\end{bmatrix} \\overset{R_3-2R_2}{\\longrightarrow} \\begin{bmatrix} 1&amp;2&amp;1&amp;2 \\ 0&amp;2&amp;-2&amp;6 \\ 0&amp;0&amp;5&amp;-10 \\end{bmatrix}(U) $$ \u6700\u7ec8\u5f97\u5230\u7684\u7ed3\u679c\u4e3a$\\begin{cases} x+2y+z=2 \\ 2y-2z=6 \\5z=-10 \\end{cases}(Ux=c)$\uff0c\u89e3\u5f97$\\begin{cases} x=2 \\y=1\\z=-2\\end{cases}$</p>"},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#_4","title":"\u6d88\u5143\u77e9\u9635","text":"<p>\u77e9\u9635\u4e58\u6cd5\uff1a\u5de6\u884c\u53f3\u5217</p> <p>\u5de6\u4e58\u53ef\u4ee5\u8868\u793a\u6210\u884c\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u53f3\u4e58\u53ef\u4ee5\u8868\u793a\u6210\u5217\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408</p> <p>\u4f8b\u5982\uff1a $$ \\begin{bmatrix} -&amp;-&amp;- \\ -&amp;-&amp;- \\-&amp;-&amp;- \\end{bmatrix}\\begin{bmatrix} 3\\4\\5 \\end{bmatrix} = 3\\times col1 + 4\\times col2 +5\\times col3 $$</p> <p>$$ \\begin{bmatrix} 1&amp;2&amp;7 \\end{bmatrix} \\begin{bmatrix} -&amp;-&amp;- \\ -&amp;-&amp;- \\-&amp;-&amp;- \\end{bmatrix} = 1\\times row1 + 2\\times row2 + 7\\times row3 $$</p> <p>\u73b0\u5728\u8981\u7528\u77e9\u9635\u4e58\u6cd5\u7684\u5f62\u5f0f\u8868\u793a\u4e0a\u9762\u7684\u7ebf\u6027\u65b9\u7a0b\u7ec4\u7cfb\u6570\u77e9\u9635\u7684\u6d88\u5143\u8fc7\u7a0b\uff1a</p> <p>Step 1: $R_2-3R_1$ $$ \\begin{bmatrix} 1&amp;0&amp;0 \\ -3&amp;1&amp;0 \\ 0&amp;0&amp;1 \\end{bmatrix} \\begin{bmatrix} 1&amp;2&amp;1 \\ 3&amp;8&amp;1 \\ 0&amp;4&amp;1 \\end{bmatrix} = \\begin{bmatrix} 1&amp;2&amp;1 \\ 0&amp;2&amp;-2 \\0&amp;4&amp;1 \\end{bmatrix} $$ \u8fd9\u6837\u6211\u4eec\u5c31\u5f97\u5230\u4e86\u5de6\u4fa7\u7684\u6d88\u5143\u77e9\u9635\uff0c\u8bb0\u4e3a$E_{21}$\uff08\u8868\u793a\u884c2\u548c\u884c1\u8fdb\u884c\u4e86\u53d8\u6362\uff09\uff0c\u6211\u4eec\u8fd8\u9700\u8981\u8fdb\u884c\u68c0\u9a8c\uff0c\u4f8b\u5982\u8981\u68c0\u9a8c\u884c2\u52173\u7684\u5143\u7d20\uff0c\u9700\u8981\u8ba1\u7b97$\\begin{bmatrix} -3&amp;1&amp;0 \\end{bmatrix} \\begin{bmatrix} 1\\1\\1 \\end{bmatrix} = -2$\uff0c\u7ed3\u679c\u6b63\u786e</p> <p>Step 2: $R_3-2R_2$ $$ \\begin{bmatrix} 1&amp;0&amp;0 \\ 0&amp;1&amp;0 \\ 0&amp;-2&amp;1 \\end{bmatrix}\\begin{bmatrix} 1&amp;2&amp;1 \\ 0&amp;2&amp;-2 \\0&amp;4&amp;1 \\end{bmatrix} = \\begin{bmatrix} 1&amp;2&amp;1 \\ 0&amp;2&amp;-2 \\ 0&amp;0&amp;5 \\end{bmatrix} $$ \u8fd9\u91cc\u5f97\u5230\u4e86\u7b2c\u4e8c\u4e2a\u6d88\u5143\u77e9\u9635\uff0c\u8bb0\u4e3a$E_{32}$</p> <p>\u6574\u4e2a\u6d88\u5143\u8fc7\u7a0b\u5c31\u662f$E_{32}(E_{21}A) = U \\rarr (E_{32}E_{21})A = U$\uff08\u77e9\u9635\u4e58\u6cd5\u7684\u7ed3\u5408\u5f8b\uff09</p> <p>\u6ce8\u610f</p> <p>\u200b   \u77e9\u9635\u4e58\u6cd5\u6ca1\u6709\u4ea4\u6362\u5f8b\uff0c\u5373$AB \\ne BA$</p> <p>\u8bfe\u7a0b\u8d44\u6e90\uff1a</p> <p>\u5b98\u65b9\u7ed9\u51fa\u7684\u8bfe\u5802\u7b14\u8bb0</p> <p>\u8bfe\u5802\u4f5c\u4e1a</p> <p>\u4f5c\u4e1a\u7b54\u6848</p> <p>\u4e60\u9898\u8bb2\u89e3</p>"},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#_5","title":"\u77e9\u9635\u4e58\u6cd5\u548c\u9006","text":""},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#_6","title":"\u77e9\u9635\u4e58\u6cd5","text":"<p>\u65b9\u6cd5\u4e00(\u516c\u5f0f\u6cd5)\uff1a\u8bbe$A$\u662f\u4e00\u4e2a$m\\times n$\u77e9\u9635\uff0c$B$\u662f\u4e00\u4e2a$n\\times p$\u77e9\u9635\uff0c\u5219$C=AB$\u662f\u4e00\u4e2a$m\\times p$\u77e9\u9635\uff0c\u4e14\u6709 $$ c_{ij} = \\sum_{k=1}^n{a_{ik}b_{kj}} $$ \u65b9\u6cd5\u4e8c\uff1a</p> <ul> <li>\u5c06\u77e9\u9635\u4e58\u6cd5\u770b\u4f5c$A$\u548c$B$\u4e2d\u7684$p$\u4e2a\u5217\u5411\u91cf\u76f8\u4e58\uff0c\u5219$C$\u4e2d\u7684\u6bcf\u4e00\u5217\u90fd\u662f$A$\u4e2d\u5404\u5217\u7684\u7ebf\u6027\u7ec4\u5408\uff0c$B$\u4e2d\u7684\u5217\u5411\u91cf\u5c31\u662f\u7ebf\u6027\u7ec4\u5408\u7684\u7cfb\u6570</li> <li>\u5c06\u77e9\u9635\u4e58\u6cd5\u770b\u4f5c$A$\u7684$m$\u4e2a\u884c\u5411\u91cf\u548c$B$\u76f8\u4e58\uff0c\u5219$C$\u4e2d\u7684\u6bcf\u4e00\u884c\u90fd\u662f$B$\u4e2d\u5404\u884c\u7684\u7ebf\u6027\u7ec4\u5408\uff0c$A$\u4e2d\u7684\u884c\u5411\u91cf\u5c31\u662f\u7ebf\u6027\u7ec4\u5408\u7684\u7cfb\u6570</li> </ul> <p>\u5373\uff1a\u8bbe\u6709\u77e9\u9635$A,B$\uff0c\u5982\u679c$B = \\begin{bmatrix} b_1&amp;b_2&amp;...&amp;b_p \\end{bmatrix}$\uff0c\u5219$AB = \\begin{bmatrix} Ab_1&amp;Ab_2&amp;...&amp;Ab_p \\end{bmatrix}$\uff0c\u5982\u679c$A = \\begin{bmatrix} a_1\\a_2\\...\\a_m \\end{bmatrix}$\uff0c\u5219$AB = \\begin{bmatrix} a_1B \\ a_2B \\ ... \\ a_pB \\end{bmatrix}$</p> <p>\u65b9\u6cd5\u4e09\uff1a$A$\u7684\u5217$(m\\times 1)$\u4e58$B$\u7684\u884c$(1\\times p)$\uff0c\u5373 $$ AB = \\sum A\u7684\u5217 \\times B\u7684\u884c $$ \u4e3e\u4e2a\uff1a $$ \\begin{bmatrix} 2&amp;7 \\3&amp;8 \\4&amp;9 \\end{bmatrix} \\begin{bmatrix} 1&amp;6 \\ 0&amp;0 \\end{bmatrix} = \\begin{bmatrix} 2\\3\\4 \\end{bmatrix} \\begin{bmatrix}1&amp;6\\end{bmatrix}+\\begin{bmatrix}7\\8\\9\\end{bmatrix}\\begin{bmatrix}0&amp;0\\end{bmatrix} $$ \u65b9\u6cd5\u56db\uff1a\u77e9\u9635\u5206\u5757 $$ \\underset{A}{\\begin{bmatrix} A_1&amp;A_2 \\A_3&amp;A_4\\end{bmatrix}} + \\underset{B}{\\begin{bmatrix} B_1&amp;B_2 \\B_3&amp;B_4\\end{bmatrix}} = \\underset{C}{\\begin{bmatrix} A_1B_1+A_2B_3&amp;A_1B_2+A_2B_4 \\A_3B_1+A_4B_3&amp;A_3B_2+A_4B_4\\end{bmatrix}} $$</p> <p>\u63d0\u793a</p> <p>\u200b   \u5206\u5757\u65f6\u5bf9\u5e94\u7684\u5404\u4e2a\u5206\u5757\u8981\u4e92\u76f8\u5339\u914d(A\u7684\u5217\u6570=B\u7684\u884c\u6570)</p>"},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#_7","title":"\u77e9\u9635\u7684\u9006","text":"<p>\u91cd\u8981\u6027\u8d28\uff1a$AA^{-1} = A^{-1}A = I(\u5355\u4f4d\u77e9\u9635)$\uff0c\u524d\u63d0\u662f\u77e9\u9635\u7684\u9006\u5b58\u5728</p> <p>\u5b9a\u4e49\uff1a\u5982\u679c\u4e00\u4e2a\u77e9\u9635\u7684\u9006\u5b58\u5728\uff0c\u5219\u79f0\u8be5\u77e9\u9635\u662f\u53ef\u9006\u7684\uff0c\u4e5f\u79f0\u975e\u5947\u5f02\u7684\uff1b\u5982\u679c\u4e00\u4e2a\u77e9\u9635\u7684\u9006\u4e0d\u5b58\u5728\uff0c\u5219\u79f0\u8be5\u77e9\u9635\u662f\u4e0d\u53ef\u9006\u7684\uff0c\u4e5f\u79f0\u5947\u5f02\u77e9\u9635</p> <p>\u77e9\u9635\u7684\u9006\u4e0d\u5b58\u5728\u7684\u6761\u4ef6\uff1a</p> <ul> <li> <p>\u4e3e\u4f8b\uff1a$A=\\begin{bmatrix} 1&amp;3 \\2&amp;6\\end{bmatrix}$\u662f\u4e00\u4e2a\u4e0d\u53ef\u9006\u77e9\u9635\uff0c\u56e0\u4e3a$A$\u4e58\u4efb\u4f55\u77e9\u9635\u5f97\u5230\u7684\u7ed3\u679c\u5bf9\u5e94\u7684\u5217\u5411\u91cf\u90fd\u662f$A$\u4e2d\u5217\u5411\u91cf\u7684\u7ebf\u6027\u7ec4\u5408\uff0c\u800c\u7531\u4e8e$A$\u4e2d\u7684\u5217\u5411\u91cf\u5171\u7ebf\uff0c\u4e14$\\begin{bmatrix} 1\\0\\end{bmatrix}$\u4e0d\u5728\u8fd9\u6761\u76f4\u7ebf\u4e0a\uff0c\u56e0\u6b64\u4e0d\u53ef\u9006</p> </li> <li> <p>\u5b9a\u74061\uff1a\u5bf9\u4e8e$n\\times n$\u77e9\u9635\uff0c\u77e9\u9635\u7684\u9006\u5b58\u5728\u5f53\u4e14\u4ec5\u5f53\u6d88\u5143\u540e\u6709$n$\u4e2a\u4e3b\u5143</p> </li> <li> <p>\u5b9a\u74062\uff1a\u5982\u679c\u77e9\u9635\u7684\u9006\u5b58\u5728\uff0c\u5219\u9006\u77e9\u9635\u552f\u4e00</p> </li> </ul> <p>Proof\uff1a\u8bbe$BA=I$\u4e14$AC=I$\uff0c\u4e0b\u9762\u8bc1\u660e$B=C$</p> <p>$B(AC) = (BA)C \\Rightarrow BI=IC \u6216B=C$</p> <ul> <li> <p>\u5b9a\u74063\uff1a\u5982\u679c$A$\u662f\u53ef\u9006\u7684\uff0c\u5219\u7ebf\u6027\u65b9\u7a0b\u7ec4$Ax=b$\u6709\u4e14\u4ec5\u6709\u552f\u4e00\u89e3\uff0c\u5176\u89e3\u4e3a$x=A^{-1}b$</p> </li> <li> <p>\u5b9a\u74064\uff1a\u82e5\u5b58\u5728\u975e\u96f6\u5411\u91cf$x$\u4f7f\u5f97$Ax=0$\uff0c\u5219$A$\u7684\u5217\u5411\u91cf\u7ebf\u6027\u76f8\u5173\uff0c$A$\u4e0d\u53ef\u9006(\u53cd\u8bc1\u6cd5\uff1a\u5982\u679c$A$\u53ef\u9006\uff0c\u5219\u65b9\u7a0b\u4e24\u8fb9\u540c\u65f6\u4e58\u4ee5$A<sup>{-1}$\uff0c\u5219\u6709$x=A</sup>0 = 0$\uff0c\u77db\u76fe)</p> </li> <li> <p>\u5b9a\u74065\uff1a\u4e00\u4e2a\u65b9\u9635\u53ef\u9006\u5f53\u4e14\u4ec5\u5f53\u5217\u5411\u91cf\u7ebf\u6027\u65e0\u5173</p> </li> <li> <p>\u5b9a\u74066\uff1a$A\u77e9\u9635\u53ef\u9006\\Leftrightarrow |A| \\ne0$</p> </li> </ul> <p>\u6c42\u9006\u77e9\u9635(Gauss-Jordan)</p> <p>\u4f8b\u5b50\uff1a $$ \\underset{A}{\\begin{bmatrix}1&amp;3 \\2&amp;7\\end{bmatrix}}\\underset{A^{-1}}{\\begin{bmatrix} a&amp;c \\ b&amp;d\\end{bmatrix}} = \\underset{I}{\\begin{bmatrix} 1&amp;0\\0&amp;1 \\end{bmatrix}} \\Rightarrow \\begin{cases}{\\begin{bmatrix}1&amp;3 \\2&amp;7\\end{bmatrix}\\begin{bmatrix}a\\b\\end{bmatrix} = \\begin{bmatrix} 1\\0 \\end{bmatrix}} \\ {\\begin{bmatrix}1&amp;3 \\2&amp;7\\end{bmatrix}\\begin{bmatrix}c\\d\\end{bmatrix} = \\begin{bmatrix} 0\\1 \\end{bmatrix}}\\end{cases} $$ \u600e\u4e48\u540c\u65f6\u6c42\u4e24\u4e2a\u65b9\u7a0b\u7ec4\u5462\uff1f\u7528\u589e\u5e7f\u77e9\u9635\uff01 $$ \\left[ \\begin{array}{cc:cc} 1 &amp; 3 &amp; 1 &amp; 0 \\ 2 &amp; 7 &amp; 0 &amp; 1 \\ \\end{array} \\right] \\rightarrow \\left[ \\begin{array}{cc:cc} 1 &amp; 3 &amp; 1 &amp; 0 \\ 0 &amp; 1 &amp; -2 &amp; 1 \\ \\end{array} \\right] \\rightarrow \\left[ \\begin{array}{cc:cc} 1 &amp; 0 &amp; 7 &amp; -3 \\ 0 &amp; 1 &amp; -2 &amp; 1 \\ \\end{array} \\right] $$ \u65b9\u6cd5\uff1a\u5c06$A$\u77e9\u9635\u548c$I$\u77e9\u9635\u8868\u793a\u6210$\\left[ \\begin{array}{c:c} A&amp;I \\end{array} \\right]$\u7684\u5f62\u5f0f\uff0c\u901a\u8fc7Gauss-Jordan\u6d88\u5143\u6cd5\u8f6c\u6362\u6210$\\left[ \\begin{array}{c:c} I&amp;A^{-1} \\end{array} \\right]$\uff0c\u5373\u53ef\u6c42\u5f97$A^{-1}$</p>"},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#alu","title":"A\u7684LU\u5206\u89e3","text":""},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#_8","title":"\u77e9\u9635\u7684\u9006\u7684\u6027\u8d28","text":"<p>$$ (1) AB\u7684\u9006\u4e3aB<sup>{-1}A</sup>$$</p> <p>$$(2) (A<sup>T)</sup> = (A<sup>{-1})</sup>T\\quad \u63d0\u793a\uff1aAA^{-1} = I,\u5bf9\u4e24\u8fb9\u77e9\u9635\u8f6c\u7f6e\u5f97(A<sup>{-1})</sup>TA^T = I$$</p>"},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#alu_1","title":"A=LU","text":"<p>\u4e3e\u4e2a: $$ \\overset{E_{21}}{\\begin{bmatrix} 1&amp;0 \\ -4&amp;1\\end{bmatrix}}\\overset{A}{\\begin{bmatrix} 2&amp;1 \\ 8&amp;7 \\end{bmatrix}} = \\overset{U}{\\begin{bmatrix} 2&amp;1 \\ 0&amp;3 \\end{bmatrix}}(\u884c\u53d8\u6362) $$ \u8868\u793a\u6210$A = LU$\u7684\u5f62\u5f0f\u5c31\u662f\uff1a $$ \\overset{A}{\\begin{bmatrix} 2&amp;1 \\ 8&amp;7 \\end{bmatrix}} = \\overset{L}{\\begin{bmatrix} 1&amp;0 \\ 4&amp;1\\end{bmatrix}}\\overset{U}{\\begin{bmatrix} 2&amp;1 \\ 0&amp;3 \\end{bmatrix}} $$</p> <p>\u600e\u4e48\u6c42\u77e9\u9635$L$($E_{21}$\u7684\u9006)</p> <p>\u200b   \u53ef\u4ee5\u628a$A=LU$\u7406\u89e3\u4e3a\u6d88\u5143\u8fc7\u7a0b\u7684\u9006\u53d8\u6362\uff0c\u4ee5\u4e0a\u9762\u7684$2\\times 2$\u77e9\u9635\u53d8\u6362\u4e3a\u4f8b\uff0c\u6d88\u5143\u65f6\u7528\u7684\u662f$R_2-4R_1$\uff0c\u90a3\u4e48\u6c42$L$\u7684\u65f6\u5019\u5c31\u76f8\u5f53\u4e8e\u5bf9\u77e9\u9635$U$\u8fdb\u884c\u9006\u53d8\u6362\u4f7f\u5176\u53d8\u6210$A$\uff0c\u4e5f\u5c31\u662f$R_2 + 4R_1$\uff0c\u5373\u53ef\u5feb\u901f\u6c42\u5f97\u77e9\u9635$L$</p> <p>\u8fdb\u4e00\u6b65\u5206\u89e3\u53ef\u4ee5\u5f97\u5230$A=LDU$: $$ \\overset{A}{\\begin{bmatrix} 2&amp;1 \\ 8&amp;7 \\end{bmatrix}} = \\overset{L}{\\begin{bmatrix} 1&amp;0 \\ 4&amp;1\\end{bmatrix}}\\overset{U}{\\begin{bmatrix} 2&amp;1 \\ 0&amp;3 \\end{bmatrix}} = \\overset{L}{\\begin{bmatrix} 1&amp;0 \\ 4&amp;1\\end{bmatrix}} \\overset{D}{\\begin{bmatrix} 2&amp;0 \\ 0&amp;3 \\end{bmatrix}} \\overset{U}{\\begin{bmatrix} 1&amp;1/2 \\ 0&amp;1 \\end{bmatrix}} $$</p> <p>\u200b   $A = LU$\u4e2d\u7684$L$\u6307\u7684\u662f\u4e0b\u4e09\u89d2\u77e9\u9635(Lower Triangle)\uff0c$U$\u6307\u7684\u662f\u4e0a\u4e09\u89d2\u77e9\u9635(Upper Triangle)\uff0c$D$\u6307\u7684\u662f\u5bf9\u89d2\u9635(diagonal)</p> <p>\u4e0b\u9762\u8ba8\u8bba\u4e00\u822c\u60c5\u51b5\uff1a\u5047\u8bbe\u77e9\u9635$A$\u7ecf\u8fc7\u4e00\u7cfb\u5217\u53d8\u6362\u5f97\u5230\u77e9\u9635$U$\uff0c\u6bd4\u5982$E_{32}E_{31}E_{21}A = U(\u6ca1\u6709\u884c\u4e92\u6362)$\uff0c\u8868\u793a\u6210$A = LU$\u7684\u5f62\u5f0f\u4e3a$A = E_{21}<sup>{-1}E_{31}</sup>U = LU$}E_{21}^{-1</p> <p>\u8bdd\u8bf4\u4e3a\u4ec0\u4e48\u8981\u8868\u793a\u6210$A=LU$\u7684\u5f62\u5f0f\u5462\uff0c\u76f4\u63a5\u7528$A$\u77e9\u9635\u5de6\u4e58\u6d88\u5143\u77e9\u9635\u8868\u793a\u5b83\u4e0d\u9999\u5417\uff1f\u8fd9\u662f\u6709\u539f\u56e0\u7684\u3002\u5047\u8bbe\u5bf9\u4e8e\u4e00\u4e2a$3 \\times 3$\u77e9\u9635\uff0c\u5982\u679c\u4f9d\u6b21\u5de6\u4e58\u6d88\u5143\u77e9\u9635$E_{21},E_{32}$\uff0c\u5728\u8fd9\u4e2a\u8fc7\u7a0b\u4e2d\u5c31\u662f\u5148\u8ba9\u7b2c\u4e8c\u884c\u4e0e\u7b2c\u4e00\u884c\u8fdb\u884c\u884c\u53d8\u6362\uff0c\u7b2c\u4e09\u884c\u518d\u4e0e\u65b0\u7684\u7b2c\u4e8c\u884c\u8fdb\u884c\u884c\u53d8\u6362\uff0c\u6700\u540e\u7684\u7ed3\u679c\u65e0\u6cd5\u660e\u663e\u5c55\u793a\u51fa\u53d8\u6362\u8fc7\u7a0b\uff0c\u4f60\u4e5f\u5c31\u4e0d\u80fd\u5feb\u901f\u7684\u5199\u51fa\u77e9\u9635$E$\uff0c\u5c31\u6bd4\u5982\u4e0b\u9762\u7684\u4f8b\u5b50\uff1a $$ E_{21} = \\begin{bmatrix} 1&amp;0&amp;0 \\ -2&amp;1&amp;0 \\ 0&amp;0&amp;1 \\end{bmatrix},E_{32} = \\begin{bmatrix} 1&amp;0&amp;0 \\ 0&amp;1&amp;0 \\ 0&amp;-5&amp;1 \\end{bmatrix},\u5219E_{32}E_{21} = \\begin{bmatrix} 1&amp;0&amp;0 \\ -2&amp;1&amp;0 \\10&amp;-5&amp;1 \\end{bmatrix} = E $$ \u4ece\u6700\u540e\u5f97\u5230\u7684\u77e9\u9635\u53ef\u4ee5\u770b\u51fa\uff0c\u76f8\u5f53\u4e8e\u5c06\u539f\u77e9\u9635\u505a\u4e86$R_2-2R_1$\u548c$R_3-5R_2+10R_1$\u4e24\u4e2a\u884c\u53d8\u6362\uff0c\u4e0d\u80fd\u4e00\u76ee\u4e86\u7136\u5730\u770b\u51fa\u5bf9\u539f\u77e9\u9635\u662f\u5982\u4f55\u8fdb\u884c\u884c\u53d8\u6362\u7684\uff0c\u6539\u6210$A=LU$\u7684\u5f62\u5f0f\u5c31\u5f88\u660e\u663e\u4e86\uff1a $$ E_{21}^{-1} = \\begin{bmatrix} 1&amp;0&amp;0 \\ 2&amp;1&amp;0 \\ 0&amp;0&amp;1 \\end{bmatrix},E_{32}^{-1} = \\begin{bmatrix} 1&amp;0&amp;0 \\ 0&amp;1&amp;0 \\ 0&amp;5&amp;1 \\end{bmatrix},\u5219E_{32}<sup>{-1}E_{21}</sup> = L $$ \u6700\u540e\u7684\u77e9\u9635\u8868\u793a\u7684\u662f\u9006\u53d8\u6362\u7684\u8fc7\u7a0b\uff0c\u660e\u663e\u7684\u53ef\u4ee5\u770b\u51fa\u539f\u77e9\u9635\u662f\u600e\u4e48\u505a\u884c\u53d8\u6362\u7684\uff0c\u66f4\u91cd\u8981\u7684\u662f\u4f60\u53ef\u4ee5\u5feb\u901f\u7684\u5199\u51fa$L$\u77e9\u9635\uff0c\u53ea\u9700\u8981\u628a\u884c\u53d8\u6362\u7684\u4e58\u6570\u653e\u8fdb\u53bb\u5c31\u53ef\u4ee5\u4e86} = \\begin{bmatrix} 1&amp;0&amp;0 \\ 2&amp;1&amp;0 \\0&amp;5&amp;1 \\end{bmatrix</p> <p>\u4e5f\u5c31\u662f\u8bf4\uff1a\u5982\u679c\u6ca1\u6709\u884c\u4e92\u6362\uff0c\u53ea\u9700\u8981\u5c06\u6d88\u5143\u4e58\u6570\u586b\u5199\u5230\u5bf9\u5e94\u4f4d\u7f6e\u5c31\u53ef\u4ee5\u5f97\u5230$L$\u77e9\u9635</p> <p>\u63d0\u95ee\uff1a\u5c06$n\\times n$\u7684\u77e9\u9635$A$\u53d8\u6362\u4e3a\u77e9\u9635$U$\u9700\u8981\u591a\u5c11\u6b21\u64cd\u4f5c\uff1f\uff08\u6ce8\uff1a\u77e9\u9635$A$\u4e2d\u7684\u5143\u7d20\u5747\u975e\u96f6\uff0c\u4e14\u4e3a\u975e\u5947\u5f02\u77e9\u9635\uff0c \u77e9\u9635\u4e2d\u4e00\u4e2a\u5143\u7d20\u7684\u4e58\u6cd5\u548c\u51cf\u6cd5\u7b97\u4e00\u6b21\u64cd\u4f5c\uff09</p> <p>ANS\uff1a$O(N^3)$</p>"},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#_9","title":"\u8f6c\u7f6e\u4e0e\u7f6e\u6362","text":""},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#_10","title":"\u7f6e\u6362\u77e9\u9635","text":"<p>\u5b9a\u4e49\uff1a\u7f6e\u6362\u77e9\u9635(Permutations)\uff0c\u8bb0\u4f5c$P$\uff0c\u662f\u7528\u6765\u5bf9\u77e9\u9635\u8fdb\u884c\u884c\u4e92\u6362\u548c\u5217\u4e92\u6362\u7684\u77e9\u9635</p> <p>\u4f8b\u5982\uff1a\u4ea4\u6362\u67d0\u4e00\u77e9\u9635\u7684\u7b2c\u4e00\u884c\u548c\u7b2c\u4e8c\u884c $$ \\begin{bmatrix}0&amp;1 \\ 1&amp;0 \\end{bmatrix}\\begin{bmatrix} a&amp;b \\ c&amp;d \\end{bmatrix} = \\begin{bmatrix} c&amp;d \\a&amp;b \\end{bmatrix} $$ \u4ea4\u6362\u67d0\u4e00\u77e9\u9635\u7684\u7b2c\u4e00\u5217\u548c\u7b2c\u4e8c\u5217 $$ \\begin{bmatrix} a&amp;b \\ c&amp;d \\end{bmatrix}\\begin{bmatrix}0&amp;1 \\ 1&amp;0 \\end{bmatrix} = \\begin{bmatrix} b&amp;a \\d&amp;c \\end{bmatrix} $$ \u6ce8\uff1a\u7f6e\u6362\u77e9\u9635\u662f\u884c\u91cd\u65b0\u6392\u5217\u7684\u5355\u4f4d\u77e9\u9635\uff0c\u5982\u679c\u5bf9\u67d0\u4e00\u77e9\u9635\u8fdb\u884c\u884c\u4e92\u6362\uff0c\u53ea\u9700\u8981\u5de6\u4e58\u5bf9\u5e94\u7684\u7f6e\u6362\u77e9\u9635\u5373\u53ef\uff0c\u5982\u679c\u662f\u5217\u4e92\u6362\uff0c\u53ea\u9700\u8981\u53c8\u79f0\u5bf9\u5e94\u7684\u77e9\u9635\u5373\u53ef</p> <p>\u4f8b\u5982\uff1a\u5982\u679c$P = \\begin{bmatrix} 1&amp;0&amp;0 \\ 0&amp;0&amp;1 \\ 0&amp;1&amp;0 \\end{bmatrix}$\uff0c\u5219$PA$\u5c31\u662f\u5c06\u77e9\u9635$A$\u7684\u7b2c\u4e8c\u884c\u548c\u7b2c\u4e09\u884c\u8fdb\u884c\u4e92\u6362\uff0c$AP$\u5c31\u662f\u5c06\u77e9\u9635$A$\u7684\u7b2c\u4e8c\u5217\u548c\u7b2c\u4e09\u5217\u8fdb\u884c\u4e92\u6362</p> <p>\u200b   \u5bf9\u4e8e$n\\times n$\u7684\u77e9\u9635\uff0c\u5171\u6709$n!$\u4e2a\u7f6e\u6362\u77e9\u9635</p> <p>\u6027\u8d28\uff1a</p> <p>$(1)P^{-1} = P^T$</p> <p>$(2)PP^T = I$</p> <p>\u8bc1\u660e\uff1a\u8003\u8651$PP^T$\u7684\u7b2c$(i,j)$\u4e2a\u5143\u7d20\uff0c\u5219\u6709 $$ (PP^T){i,j} =\\sum<sup>n_{k=1}P_{i,k}P</sup>T $$ \u7531\u4e8e$P$\u662f\u7f6e\u6362\u77e9\u9635\uff0c\u56e0\u6b64\u6bcf\u4e00\u884c\u53ea\u6709\u4e00\u4e2a\u5143\u7d20\u4e3a1\uff0c\u5176\u4f59\u4e3a0\uff1a} = \\sum^n_{k=1}P_{i,k}P_{j,k</p> <ul> <li> <p>\u5f53$i \\ne j$\u65f6\uff0c\u7531\u4e8e\u6bcf\u4e00\u5217\u4e5f\u53ea\u6709\u4e00\u4e2a1\uff0c\u6240\u4ee5$P_{i,k}$\u548c$P_{j,k}$\u4e0d\u4f1a\u540c\u65f6\u4e3a1\uff0c\u6545$(PP^T)_{i,j}= 0$</p> </li> <li> <p>\u5f53$i = j$\u65f6\uff0c\u5219$P_{i,k}P_{i,k}$\u53ea\u6709\u5728$P_{i,k} = 1$\u65f6\u4e3a1\uff0c\u5176\u4f59\u4e3a0\uff0c\u56e0\u6b64$(PP^T)_{i,i} = 1$</p> </li> </ul> <p>\u56e0\u6b64$PP^T = I$</p> <p>\u4e0a\u4e00\u8282\u63d0\u5230\u4e86\u5728\u6ca1\u6709\u884c\u4e92\u6362\u7684\u60c5\u51b5\u4e0b\u77e9\u9635$A$\u53ef\u4ee5\u5206\u89e3\u6210$A = LU$\u7684\u5f62\u5f0f\uff0c\u90a3\u4e48\u5982\u679c\u6709\u884c\u4e92\u6362\u5462\uff1f</p> <p>\u5bf9\u4e8e\u4efb\u4f55\u53ef\u9006\u77e9\u9635$A$\uff0c\u5176\u5206\u89e3\u53ef\u4ee5\u8868\u793a\u4e3a$PA = LU$</p>"},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#_11","title":"\u77e9\u9635\u8f6c\u7f6e","text":"<p>\u5b9a\u4e49\uff1a\u5bf9\u4e8e\u4e00\u4e2a$m\\times n$\u77e9\u9635$A$\uff0c\u5b83\u7684\u8f6c\u7f6e$A^T$\u662f\u4e00\u4e2a$n\\times m$\u77e9\u9635\uff0c\u5176\u4e2d$(A^T){i,j} = A$</p> <p>\u6027\u8d28\uff1a$(AB)^T = B<sup>TA</sup>T$</p> <p>\u6211\u4eec\u79f0\u5177\u6709$A = A^T$\u6027\u8d28\u7684\u77e9\u9635\u4e3a\u5bf9\u79f0\u77e9\u9635\uff0c\u4f8b\u5982$A = \\begin{bmatrix} 3&amp;7&amp;1 \\ 7&amp;2&amp;4 \\ 1&amp;4&amp;6\\end{bmatrix}$\uff0c\u5bf9\u4efb\u610f\u77e9\u9635$A$\uff0c$AA^T$\u662f\u4e00\u4e2a\u5bf9\u79f0\u77e9\u9635</p>"},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/Ch01/#_12","title":"\u5411\u91cf\u7a7a\u95f4","text":""},{"location":"%E6%95%B0%E5%AD%A6%E7%9B%B8%E5%85%B3/%E7%BA%BF%E6%80%A7%E4%BB%A3%E6%95%B0/%E5%89%8D%E8%A8%80/","title":"\u524d\u8a00","text":"<p>\u6982\u8981</p> <p>\u200b\u8fd9\u662f\u6211\u81ea\u5b66\u7ebf\u6027\u4ee3\u6570\u7684\u7b14\u8bb0\uff0c\u5927\u4e00\u4e0a\u5b66\u671f\u7684\u65f6\u5019\u5b66\u7684\u4e0d\u662f\u5f88\u597d\uff0c\u6691\u5047\u6253\u7b97\u91cd\u6e29\u4e00\u4e0b\uff0c\u6211\u81ea\u5b66\u7684\u65f6\u5019\u53c2\u8003\u7684\u662fMIT 18.06: Introduction to Linear Algebra\uff0c\u6559\u6750\u4e5f\u662fMIT\u7684\u5b98\u65b9\u6559\u6750\uff0c\u8bfe\u7a0b\u4f5c\u4e1a\u548c\u89c6\u9891\u90fd\u53ef\u4ee5\u5728\u7f51\u7ad9\u4e0a\u627e\u5230</p> <p>\u53c2\u8003\u8d44\u6599\uff1a 1. \u8bfe\u7a0b\u7f51\u7ad9\uff1aMIT 18.06: Introduction to Linear Algebra 2. \u7afa\u53ef\u6862\u5b66\u9662\u7684\u7ebf\u6027\u4ee3\u6570\u8f85\u5b66\u8bb2\u4e49(\u819c\u62dc\u5927\u4f6c.jpg)</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E5%89%8D%E8%A8%80/","title":"\u524d\u8a00","text":"<p>\u6982\u8ff0</p> <p>\u7531\u4e8e\u6ce5\u6d59\u5728\u8ba1\u9662\u7684\u57f9\u517b\u65b9\u6848\u4e2d\u5e76\u6ca1\u6709Python\u8fd9\u95e8\u8bfe\uff0c\u800c\u4eba\u5de5\u667a\u80fd\u4e13\u4e1a\u76f8\u5173\u7684\u4e13\u4e1a\u8bfe\u90fd\u8981\u6c42\u7528Python\u6765\u5199\u4ee3\u7801\uff0c\u6240\u4ee5\u5229\u7528\u5927\u4e00\u4e0b\u8fd9\u4e2a\u6691\u5047\u6765\u5b66\u4e00\u4e0bPython\u3002\uff08\u4e0d\u7136\u7684\u8bdd\u77ed\u5b66\u671f\u8981\u4e00\u5929\u901f\u901a\uff0c\u592a\u53ef\u6015\u4e86\uff09</p> <p>\u53c2\u8003\u8d44\u6599\uff1a\u5317\u5927\u9648\u658c\u8001\u5e08\u7684\u6155\u8bfe</p> <p>\u5f00\u53d1\u73af\u5883\uff1aVSCode 1.101.2.0    Python\u7248\u672c\uff1a3.13.5   \u64cd\u4f5c\u7cfb\u7edf\uff1aWindows 11</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E5%89%8D%E8%A8%80/#python","title":"\u7b2c\u4e00\u4e2aPython\u7a0b\u5e8f","text":"<p><pre><code>print(\"Hello World!\")\n</code></pre> <pre><code>inport datetime\n\ndtstr = input('Enter the datetime:(20250708):')\ndt = datetime.datetime.strptime(another_dtstr, \"%Y%m%d\")\nprint(int((dt - another_dt).days) + 1)\n</code></pre></p> <p>\u6ce8\u610f</p> <p>Python\u548cC/C++\u6700\u5927\u7684\u4e0d\u540c\u662f\u5b83\u7684\u5bf9\u9f50\u548c\u7f29\u8fdb\u90fd\u5341\u5206\u91cd\u8981\uff0c\u5343\u4e07\u522b\u5199\u6210C\u4e86\u3002</p>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E5%89%8D%E8%A8%80/#python_1","title":"Python\u7a0b\u5e8f\u8bbe\u8ba1\u98ce\u683c","text":"<ul> <li>\u4f18\u96c5\uff0c\u660e\u786e\uff0c\u7b80\u5355</li> <li>\u4ee3\u7801\u5f3a\u5236\u7f29\u8fdb</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E5%AE%B9%E5%99%A8%E7%B1%BB%E5%9E%8B/","title":"\u5bb9\u5668\u7c7b\u578b","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E5%AE%B9%E5%99%A8%E7%B1%BB%E5%9E%8B/#_2","title":"\u5217\u8868\u548c\u5143\u7ec4","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E5%AE%B9%E5%99%A8%E7%B1%BB%E5%9E%8B/#_3","title":"\u6570\u636e\u6536\u7eb3\u76d2","text":"<ul> <li>\u7528\u6765\u6536\u7eb3\u6570\u636e\u5bf9\u8c61\u7684\u6570\u636e\u7c7b\u578b</li> <li>\u4ee5\u4e00\u79cd\u89c4\u5219\u7684\u4e0b\u6807\u7d22\u5f15\u65b9\u5f0f\uff08\u6536\u7eb3\u76d2\u540d\u5b57 + \u6570\u5b57\u5e8f\u53f7\uff09\u8bbf\u95ee\u5230\u6bcf\u4e2a\u6570\u636e</li> <li>\u8fd9\u79cd\u6536\u7eb3\u76d2\u662f\u4e00\u79cd\u5e8f\u5217</li> <li>\u5217\u8868\u53ef\u4ee5\u5220\u9664\u3001\u6dfb\u52a0\u3001\u66ff\u6362\u3001\u91cd\u6392\u5e8f\u5217\u4e2d\u7684\u5143\u7d20(\u53ef\u53d8\u7c7b\u578b)</li> <li>\u5143\u7ec4\u662f\u4e0d\u80fd\u518d\u66f4\u65b0\uff08\u4e0d\u53ef\u53d8\uff09\u5e8f\u5217</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E5%AE%B9%E5%99%A8%E7%B1%BB%E5%9E%8B/#_4","title":"\u5217\u8868\u548c\u5143\u7ec4\u7684\u521b\u5efa","text":"<ul> <li>\u521b\u5efa\u5217\u8868\uff1a\u65b9\u62ec\u53f7\u6cd5<code>[]</code>\uff0c\u6307\u660e\u7c7b\u578b\u6cd5<code>list()</code></li> <li>\u521b\u5efa\u5143\u7ec4\uff1a\u5706\u62ec\u53f7\u6cd5<code>()</code>\uff0c\u6307\u660e\u7c7b\u578b\u6cd5<code>tuple()</code></li> <li>\u5217\u8868\u6216\u5143\u7ec4\u4e2d\u4fdd\u5b58\u7684\u5404\u4e2a\u6570\u636e\u79f0\u4f5c\u5143\u7d20(element)\uff0c\u7c7b\u578b\u6ca1\u6709\u9650\u5236</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E5%AE%B9%E5%99%A8%E7%B1%BB%E5%9E%8B/#_5","title":"\u5217\u8868\u7684\u64cd\u4f5c","text":"<ul> <li>\u589e\u957f\u5217\u8868: <code>append()</code>/<code>insert()</code>/<code>extend()</code></li> <li>\u7f29\u51cf\u5217\u8868: <code>pop()</code>/<code>remove()</code>/<code>clear()</code></li> <li>\u5217\u8868\u662f\u4e00\u79cd\u53ef\u53d8\u5bb9\u5668\uff0c\u53ef\u4ee5\u968f\u610f\u589e\u51cf</li> <li>\u5e76\u4e0d\u662f\u6240\u6709\u7684\u6570\u636e\u5bb9\u5668\u90fd\u80fd\u50cf\u5217\u8868\u4e00\u6837\u53ef\u4ee5\u7ee7\u7eed\u6dfb\u52a0\u65b0\u5143\u7d20</li> <li>\u91cd\u65b0\u7ec4\u7ec7:   <code>reverse()</code>/<code>sort()</code>\u64cd\u4f5c     <pre><code>&gt;&gt;&gt; num = [1,2,7,4,3,9,0]\n&gt;&gt;&gt; num.reverse()\n&gt;&gt;&gt; num\n[0, 9, 3, 4, 7, 2, 1]\n&gt;&gt;&gt; num.sort()\n&gt;&gt;&gt; num\n[0, 1, 2, 3, 4, 7, 9]\n&gt;&gt;&gt; num.sort(reverse=True)\n&gt;&gt;&gt; num\n[9, 7, 4, 3, 2, 1, 0]\n</code></pre> <code>reversed()</code>/<code>sorted()</code>\uff1a\u5f97\u5230\u91cd\u65b0\u6392\u5217\u7684\u5217\u8868\uff0c\u800c\u4e0d\u5f71\u54cd\u539f\u6765\u7684\u5217\u8868 </li> <li>\u5176\u4ed6\u64cd\u4f5c\uff1a</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/","title":"\u6570\u636e\u7c7b\u578b","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_2","title":"\u6570\u636e\u7c7b\u578b\u548c\u8bed\u53e5","text":"<ul> <li>\u7b80\u5355\u7c7b\u578b\u7528\u6765\u8868\u793a\u503c: \u6574\u6570int, \u6d6e\u70b9\u6570float, \u590d\u6570complex, \u903b\u8f91\u503cbool, \u5b57\u7b26\u4e32str</li> <li>\u5bb9\u5668\u7c7b\u578b\u7528\u6765\u7ec4\u7ec7\u8fd9\u4e9b\u503c: \u5217\u8868list, \u5143\u7ec4tuple, \u96c6\u5408set, \u5b57\u5178dict</li> <li>\u6570\u636e\u7c7b\u578b\u4e4b\u95f4\u51e0\u4e4e\u90fd\u53ef\u4ee5\u8f6c\u6362</li> <li>\u5bf9\u6570\u636e\u8fdb\u884c\u7ec4\u7ec7\uff1a\u961f\u5217\u3001\u6808\u3001\u6811\u3001\u56fe\u7b49</li> <li>\u5b9a\u4e49\u8bed\u53e5\uff1adef,class   <pre><code>def sum_list(alist):\n  sum_temp = 0\n  for i in alist:\n      sum_temp += i\n  return sum temp\nprint(sum_list)\nmy_list = [23,45,67,89,100]\nmy_sum = sum_list(my_list)\nprint(\"sum of my list is:%d\" % (my_sum))\n</code></pre></li> <li>\u53ef\u4ee5\u5b9a\u4e49\u51fd\u6570\u3001\u7c7b\u7b49\u4ee3\u7801\u5bf9\u8c61\uff0c\u8c03\u7528\u51fd\u6570\u6216\u8005\u7c7b\uff0c\u4e5f\u53ef\u4ee5\u5f97\u5230\u6570\u636e\u5bf9\u8c61\uff0c\u53ef\u8c03\u7528\u7684\u5bf9\u8c61\u79f0\u4e3acallable</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_3","title":"\u6570\u636e\u57fa\u672c\u7c7b\u578b\uff1a\u6570\u503c","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#int","title":"\u6574\u6570\u7c7b\u578bint","text":"<ul> <li>\u6700\u5927\u7279\u70b9\u662f\u4e0d\u9650\u5236\u5927\u5c0f</li> <li>\u5e38\u89c1\u8fd0\u7b97</li> </ul> <ul> <li>\u5927\u5c0f\u6bd4\u8f83\uff1a\u652f\u6301\u8fde\u7eed\u6bd4\u8f83\u5224\u65ad\uff0c\u4f8b\u5982\uff1a   <pre><code>&gt;&gt;&gt; 7 &gt; 3 &gt;= 3\nTrue\n&gt;&gt;&gt; 12 &lt; 23 &lt; 22\nFalse\n</code></pre></li> <li>\u6574\u6570\u7684\u5404\u79cd\u8fdb\u5236\u8868\u793a\uff1a\u524d\u7f00\u6807\u8bc6+\u6570\u5b57</li> <li>\u5341\u8fdb\u5236\uff1a<code>367</code></li> <li>\u4e8c\u8fdb\u5236\uff1a<code>0b10110111</code></li> <li>\u516b\u8fdb\u5236\uff1a<code>0o557</code></li> <li>\u5341\u516d\u8fdb\u5236\uff1a<code>0x16f</code></li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#float","title":"\u6d6e\u70b9\u6570\u7c7b\u578bfloat","text":"<ul> <li>\u53d7\u523017\u4f4d\u6709\u6548\u6570\u5b57\u7684\u9650\u5236</li> <li>\u7279\u70b9\uff1a\u79d1\u5b66\u8ba1\u6570\u6cd5\u3001\u6709\u6548\u4f4d\u6570\u5207\u65ad</li> <li>\u7279\u6027\uff1a\u8fdb\u5236\u8f6c\u6362(10-&gt;2)\u5bfc\u81f4\u7cbe\u5ea6\u8bef\u5dee</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#complex","title":"\u590d\u6570\u7c7b\u578bcomplex","text":"<ul> <li>Python\u5185\u7f6e\u590d\u6570\u6570\u636e\u7c7b\u578b</li> <li>\u652f\u6301\u6240\u6709\u5e38\u89c1\u8fd0\u7b97</li> <li>\u590d\u6570\u4e4b\u95f4\u53ea\u80fd\u6bd4\u8f83\u662f\u5426\u76f8\u7b49</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_4","title":"\u66f4\u591a\u7684\u6570\u5b66\u6a21\u5757","text":"<ul> <li>math\u6a21\u5757 <pre><code>import math\n</code></pre> \u6570\u5b66\u5e38\u6570\u3001\u6570\u5b66\u51fd\u6570\u7b49</li> <li>cmath\u6a21\u5757\uff1a\u4e13\u95e8\u9762\u5411\u590d\u6570\u8ba1\u7b97\uff0c\u5e73\u9762\u76f4\u89d2\u5750\u6807\u7cfb\u548c\u6781\u5750\u6807\u7684\u8f6c\u6362</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_5","title":"\u6570\u636e\u57fa\u672c\u7c7b\u578b\uff1a\u903b\u8f91\u503c","text":"<ul> <li>bool\u7c7b\u578b: <code>True, False</code></li> <li>\u903b\u8f91\u8fd0\u7b97: <code>and, or, not</code> </li> <li>\u4f18\u5148\u7ea7: <code>not &gt; and &gt; or</code></li> <li>\u6574\u6570\u3001\u6d6e\u70b9\u6570\u548c\u590d\u6570\u7c7b\u578b: \u6240\u6709\u975e0\u90fd\u4e3a\u771f\uff0c0\u4e3a\u5047</li> <li>\u5b57\u7b26\u4e32\u7c7b\u578b: \u6240\u6709\u975e\u7a7a\u4e32\u90fd\u4e3a\u771f\uff0c\u7a7a\u4e32\u4e3a\u5047</li> <li>\u6240\u6709\u5e8f\u5217\u7c7b\u578b\uff08\u5305\u62ec\u5b57\u7b26\u4e32\uff09: \u7a7a\u5e8f\u5217\u4e3a\u5047\uff0c\u975e\u7a7a\u5e8f\u5217\u4e3a\u771f</li> <li>\u7a7a\u503c<code>None</code>: \u5173\u952e\u5b57</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_6","title":"\u6570\u636e\u57fa\u672c\u7c7b\u578b\uff1a\u5b57\u7b26\u4e32","text":"<ul> <li>\u8868\u793a\u5b57\u7b26\u4e32\u6570\u503c: \u7528\u53cc\u5f15\u53f7\u6216\u8005\u5355\u5f15\u53f7\u90fd\u53ef\u4ee5\u8868\u793a\u5b57\u7b26\u4e32\uff0c\u4f46\u5fc5\u987b\u6210\u5bf9</li> <li>\u591a\u884c\u5b57\u7b26\u4e32\u7528\u4e09\u4e2a\u8fde\u7eed\u7684\u5355\u5f15\u53f7\u8868\u793a</li> <li>\u5982\u679c\u5b57\u7b26\u4e32\u4e2d\u5305\u542b\u4e86\u5355\u5f15\u53f7\u6216\u8005\u53cc\u5f15\u53f7\uff0c\u7528\u8f6c\u4e49\u5b57\u7b26\u8868\u793a</li> </ul> <ul> <li>\u5b57\u7b26\u7684\u7f16\u53f7: \u4ece0\u5f00\u59cb\uff0c\u6700\u540e\u4e00\u4e2a\u7f16\u53f7\u662f-1\uff0c\u5012\u6570\u7b2c\u4e8c\u4e2a\u7f16\u53f7\u662f-2\uff0c... \uff0c\u6bcf\u4e00\u4e2a\u5b57\u7b26\u6709\u4e24\u4e2a\u7f16\u53f7\uff08\u6b63\u5411/\u53cd\u5411\uff09   <pre><code>s = \"abc\"\ns[1] = 'b'\ns[-1] = 'c'\n</code></pre></li> <li>\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u503c\u53ef\u4ee5\u5173\u8054\u591a\u4e2a\u540d\u5b57\uff0c\u4e00\u4e2a\u540d\u5b57\u53ea\u80fd\u5173\u8054\u4e00\u4e2a\u5b57\u7b26\u4e32\u6570\u503c</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_7","title":"\u5e38\u89c1\u5b57\u7b26\u4e32\u64cd\u4f5c","text":"<ul> <li>\u83b7\u53d6\u5b57\u7b26\u4e32\u7684\u957f\u5ea6\uff1a<code>len(str)</code></li> <li>\u5207\u7247(slice)\u64cd\u4f5c\u83b7\u53d6\u5b50\u4e32\uff1a<code>str[start:end:step]</code>,step\u53ef\u4ee5\u662f\u8d1f\u6570\uff0c\u8868\u793a\u5012\u8fc7\u6765\u53d6   <pre><code>str = \"Hello World!\"\nstr[3:8:2] = \"l o\"\n</code></pre></li> <li>\u52a0\u6cd5\uff1a<code>+</code>\u5c06\u4e24\u4e2a\u5b57\u7b26\u4e32\u8fdb\u884c\u8fde\u63a5\uff0c\u5f97\u5230\u65b0\u7684\u5b57\u7b26\u4e32</li> <li>\u4e58\u6cd5\uff1a<code>*</code> \u5c06\u5b57\u7b26\u4e32\u91cd\u590d\u82e5\u5e72\u6b21\uff0c\u751f\u6210\u65b0\u7684\u5b57\u7b26\u4e32</li> <li>\u5224\u65ad\u5b57\u7b26\u4e32\u662f\u5426\u76f8\u540c(<code>==</code>)</li> <li>\u5224\u65ad\u5b57\u7b26\u4e32\u4e2d\u662f\u5426\u5305\u542b\u67d0\u4e2a\u5b57\u4e32(<code>in</code>)\uff0c\u8fd4\u56de\u903b\u8f91\u503c</li> <li>\u5220\u9664\u7a7a\u683c\uff1a<code>str.strip()</code></li> <li>\u5220\u9664\u5b57\u7b26\u4e32\u5de6\u90e8\u7684\u7a7a\u683c\uff1a<code>str.lstrip()</code></li> <li>\u5220\u9664\u5b57\u7b26\u4e32\u53f3\u90e8\u7684\u7a7a\u683c\uff1a<code>str.rstrip()</code></li> <li>\u5224\u65ad\u662f\u5426\u5168\u662f\u5b57\u6bcd\uff1a<code>string.isalpha()</code></li> <li>\u5224\u65ad\u662f\u5426\u5168\u662f\u6570\u5b57\uff1a<code>string.isdigit()</code></li> <li>\u5224\u65ad\u662f\u5426\u5168\u662f\u5b57\u6bcd\u6216\u6570\u5b57\uff1a<code>string.isalnum()</code></li> <li><code>split</code>\uff1a\u5206\u5272\uff1b<code>join</code>\uff1a\u5408\u5e76</li> <li><code>upper/lower/swapcase</code>\uff1a \u5927\u5c0f\u5199\u76f8\u5173</li> <li><code>ljust/rjust/center</code>\uff1a\u5de6\u4e2d\u53f3\u5bf9\u9f50</li> <li><code>replace</code>\uff1a\u66ff\u6362   <pre><code>&gt;&gt;&gt; 'You are my sunshine'.split(' ')\n['You', 'are', 'my', 'sunshine']\n&gt;&gt;&gt; '-'.join(\"One\", \"Two\", \"Three\")\n'One-Two-Three'\n&gt;&gt;&gt;'abc'.upper()\n'ABC'\n&gt;&gt;&gt;'ABC'.lower()\n'abc'\n&gt;&gt;&gt;'aBc'.swapcase()\n'AbC'\n&gt;&gt;&gt;'Hello World'.center(20)\n' Hello World    '\n&gt;&gt;&gt;'Tom smiled, Tom cried, Tom shouted'.replace('Tom', 'Jerry')\n'Jerry smiled, Jerry cried, Jerry shouted'\n</code></pre></li> <li>\u5b57\u7b26\u4e32\u662f\u4e00\u79cd\u5e8f\u5217\uff1a\u5305\u542b<code>slice,len,+,*,in</code>\u7b49\u64cd\u4f5c</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_8","title":"\u53d8\u91cf\u548c\u5f15\u7528","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_9","title":"\u6570\u636e\u7684\u547d\u540d","text":"<ul> <li>\u8bed\u6cd5\uff1a&lt; name &gt; = &lt; data &gt;</li> <li>\u547d\u540d\u89c4\u5219\uff1a\u5b57\u6bcd\u548c\u6570\u5b57\u7ec4\u5408\u800c\u6210\uff0c\u4e0b\u5212\u7ebf\"_\"\u7b97\u5b57\u6bcd\uff0c\u5b57\u6bcd\u533a\u5206\u5927\u5c0f\u5199\uff0c\u4e0d\u80fd\u5e26\u7279\u6b8a\u5b57\u7b26\uff0c\u7b2c\u4e00\u4e2a\u5b57\u7b26\u5fc5\u987b\u662f\u5b57\u6bcd\uff0c\u4e0d\u80fd\u662f\u6570\u5b57\uff08\u6c49\u5b57\u7b97\u4f5c\u5b57\u6bcd\uff09</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_10","title":"\u540d\u5b57\u4e0e\u53d8\u91cf","text":"<ul> <li>\u540d\u5b57\u548c\u6570\u503c\u7684\u5173\u8054\u6210\u4e3a\u5f15\u7528\uff0c\u5173\u8054\u6570\u503c\u540e\u7684\u540d\u5b57\u5c31\u62e5\u6709\u4e86\u6570\u636e\u7684\u503c\u548c\u7c7b\u578b\uff0c\u4e00\u4e2a\u6570\u503c\u53ef\u4ee5\u548c\u591a\u4e2a\u540d\u5b57\u5173\u8054</li> <li>\u4e0e\u6570\u503c\u5173\u8054\u7684\u540d\u5b57\u4e5f\u79f0\u4f5c\u53d8\u91cf\uff0c\u8868\u793a\u540d\u5b57\u7684\u503c\u548c\u7c7b\u578b\u53ef\u4ee5\u968f\u65f6\u53d8\u5316\uff0c\u53d8\u91cf\u53ef\u4ee5\u968f\u65f6\u6307\u5411\u4efb\u4f55\u4e00\u4e2a\u6570\u636e\u5bf9\u8c61\uff0c\u53d8\u91cf\u7684\u7c7b\u578b\u968f\u7740\u6307\u5411\u7684\u6570\u636e\u5bf9\u8c61\u7c7b\u578b\u6539\u53d8\u800c\u6539\u53d8</li> </ul>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_11","title":"\u8d4b\u503c\u8bed\u53e5","text":"<ul> <li>\u57fa\u672c\u8d4b\u503c\u8bed\u53e5\uff1a =  <li>\u5408\u5e76\u8d4b\u503c\uff1a<code>a = b = c = 1</code></li> <li>\u6309\u987a\u5e8f\u4f9d\u6b21\u8d4b\u503c\uff1a<code>a, b, c = 1, 2, 3</code></li> <li>\u7b80\u5199\u8d4b\u503c\u8bed\u53e5\uff1a<code>price += 1, price *= 1.5, price /= 3 + 4(price /= 7)</code></li>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_12","title":"\u4e0a\u673a\u7ec3\u4e60","text":""},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_13","title":"\u6570\u503c\u57fa\u672c\u8fd0\u7b97","text":"<pre><code>+, -, *, /, //, %, **\nhex(), oct(), bin()\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_14","title":"\u7c7b\u578b\u8f6c\u6362","text":"<pre><code>str(), int(), float(), bool()\nis None, ==, !=\n</code></pre>"},{"location":"%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80%E5%85%A5%E9%97%A8/Python/%E6%95%B0%E6%8D%AE%E7%B1%BB%E5%9E%8B/#_15","title":"\u5b57\u7b26\u4e32\u57fa\u672c\u64cd\u4f5c","text":"<pre><code>+, *, len(), [], in\nord()  # \u83b7\u53d6\u5b57\u7b26\u7684ASCII\u7801\nchr()  # \u83b7\u53d6ASCII\u7801\u5bf9\u5e94\u7684\u5b57\u7b26\n</code></pre>"},{"location":"%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0/CSAPP/Note/Chapter%202%20Representing%20and%20Manipulating%20Information/","title":"Chapter 2 Representing and Manipulating Information","text":"<p>\u672c\u7ae0\u6982\u8981</p>"},{"location":"%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0/CSAPP/Note/Chapter%202%20Representing%20and%20Manipulating%20Information/#_1","title":"\u5f15\u8a00","text":"<p>\u672c\u7ae0\u6211\u4eec\u4e3b\u8981\u8003\u8651\u4e09\u79cd\u6570\u5b57\u7684\u8868\u793a\u65b9\u5f0f\uff1a</p> <ul> <li>Unsigned Encoding:\u7528\u6765\u8868\u793a\u975e\u8d1f\u6570</li> <li>Two's-Complement Encoding\uff1a\u7528\u6765\u8868\u793a\u6709\u7b26\u53f7\u6574\u6570</li> <li>Floating-point Encoding\uff1a\u7528\u6765\u8868\u793a\u5b9e\u6570</li> </ul> <p>\u5bf9\u4e8e\u6574\u6570\u8fd0\u7b97\uff0c\u867d\u7136\u6709\u53ef\u80fd\u51fa\u73b0overflow\uff0c\u4f46\u662f\u6ee1\u8db3\u6b63\u5e38\u8fd0\u7b97\u4e2d\u7684\u8fd0\u7b97\u5f8b\uff0c\u4f8b\u5982 $$ (500 \\times  400) \\times (300 \\times 200) =((500 \\times 400)\\times300)\\times200 = 400\\times(200\\times(300\\times500)) $$ \u4f46\u662f\u5bf9\u4e8e\u6d6e\u70b9\u6570\u8fd0\u7b97\u548c\u6b63\u5e38\u7684\u8fd0\u7b97\u5f8b\u4e0d\u540c\uff0c\u4f8b\u5982 $$ (3.14+1e20)-1e20 \\ne 3.14+(1e20-1e20) $$ \u524d\u8005\u5f97\u5230\u7684\u7ed3\u679c\u662f0.0\uff0c\u800c\u540e\u8005\u5f97\u5230\u7684\u7ed3\u679c\u662f3.14</p>"},{"location":"%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0/CSAPP/Note/Chapter%202%20Representing%20and%20Manipulating%20Information/#21-information-storage","title":"2.1 Information Storage","text":"<p>\u5728\u8ba1\u7b97\u673a\u4e2d\uff0c\u4fe1\u606f\u4ee5\u5b57\u8282(bytes)\u4e3a\u5355\u4f4d (\u53ef\u88ab\u5904\u7406\u7684\u6700\u5c0f\u5185\u5b58\u5355\u5143\uff0c\u6ce8\u610f==\u4e0d\u662fbit==)\u5b58\u50a8\u5728\u5185\u5b58\u5f53\u4e2d\u3002\u8ba1\u7b97\u673a\u7a0b\u5e8f\u5c06\u5185\u5b58\u65f6\u4e3a\u4e00\u4e2a\u975e\u5e38\u5927\u7684\u5b57\u8282\u6570\u7ec4\uff0c\u79f0\u4e3a\u865a\u62df\u5185\u5b58(virtual memory)\uff0c\u5185\u5b58\u4e2d\u7684\u6bcf\u4e2a\u5b57\u8282\u901a\u8fc7\u4e00\u4e2a\u7279\u5b9a\u7684\u6570\u5b57\u6765\u6807\u8bc6\uff0c\u79f0\u4e3a\u5730\u5740(address)\uff0c\u6240\u6709\u53ef\u80fd\u7684\u5730\u5740\u7684\u96c6\u5408\u79f0\u4e3a\u865a\u62df\u5730\u5740\u7a7a\u95f4(virtual address space)\u3002</p> <p>\u5728\u4e4b\u540e\u7684\u7ae0\u8282\u4e2d\uff0c\u6211\u4eec\u4f1a\u4e86\u89e3\u7f16\u8bd1\u5668\u548c\u8fd0\u884c\u4e2d\u7684\u7a0b\u5e8f\u662f\u5982\u4f55\u5c06\u5185\u5b58\u7a7a\u95f4\u5206\u6210\u53ef\u7ba1\u7406\u7684\u5355\u5143\u6765\u50a8\u5b58\u4e0d\u540c\u7684\u7a0b\u5e8f\u5bf9\u8c61(program objects)\uff0c\u5373\u7a0b\u5e8f\u6570\u636e\uff0c\u6307\u4ee4\u548c\u63a7\u5236\u4fe1\u606f\u3002\u4ee5C\u8bed\u8a00\u7684\u6307\u9488\u4e3a\u4f8b\uff0c\u6307\u9488\u7684\u503c\u5c31\u662f\u7a0b\u5e8f\u5bf9\u8c61\u7b2c\u4e00\u4e2a\u5b57\u8282\u7684\u865a\u62df\u5730\u5740\uff0c\u901a\u8fc7\u7c7b\u578b(type)\u786e\u5b9a\u5982\u4f55\u8bfb\u53d6\u5176\u4e2d\u7684\u503c\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0/CSAPP/Note/Chapter%202%20Representing%20and%20Manipulating%20Information/#211-data-sizes","title":"2.1.1 Data Sizes","text":"<p>\u8ba1\u7b97\u673a\u548c\u7f16\u8bd1\u5668\u901a\u8fc7\u4f7f\u7528\u4e0d\u540c\u65b9\u6cd5\u6765\u7f16\u7801\u6570\u636e\uff0c\u4f8b\u5982\u6574\u6570\u548c\u6d6e\u70b9\u6570\uff0c\u5b83\u4eec\u90fd\u6709\u4e0d\u540c\u7684\u957f\u5ea6\u3002\u4f8b\u5982\u4e0b\u56fe\u4e2d\u5c55\u793a\u4e86C\u8bed\u8a00\u4e2d\u4e0d\u540c\u6570\u636e\u7c7b\u578b\u7684\u5b57\u8282\u6570\uff1a</p> <p></p> <p>\u6bcf\u4e2a\u6570\u636e\u7c7b\u578b\u7684\u5b57\u8282\u6570\u53d6\u51b3\u4e8e\u673a\u5668\u548c\u7f16\u8bd1\u5668\uff0c\u4e0a\u56fe\u4e2d\u5c55\u793a\u7684\u5c31\u662f32\u4f4d\u548c64\u4f4d\u4e24\u79cd\u4e0d\u540c\u673a\u5668\u4e2d\u5404\u4e2a\u6570\u636e\u7c7b\u578b\u7684\u5b57\u8282\u6570\uff0clong\u6570\u636e\u7c7b\u578b\u5360\u636e\u4e86\u8be5\u673a\u5668\u7684\u6574\u4e2a\u5b57\u957f(word size)\uff0c\u572832\u4f4d\u4e2d\u5c31\u662f4\u4e2a\u5b57\u8282\uff0c64\u4f4d\u4e2d\u5c31\u662f8\u4e2a\u5b57\u8282\u3002long long\u6570\u636e\u7c7b\u578b(ISO C99)\u5141\u8bb864\u4f4d\u7684\u6574\u6570\uff0c\u5728332\u4f4d\u7684\u673a\u5668\u4e2d\uff0c\u7f16\u8bd1\u5668\u5fc5\u987b\u901a\u8fc7\u751f\u6210\u6267\u884c32\u4f4d\u64cd\u4f5c\u5e8f\u5217\u7684\u4ee3\u7801\u6765\u4e3a\u8fd9\u79cd\u6570\u636e\u7c7b\u578b\u7f16\u8bd1\u8fd0\u7b97\u64cd\u4f5c\u3002C\u8bed\u8a00\u4e2d\u7684\u6307\u9488\u4e5f\u5360\u636e\u4e86\u673a\u5668\u7684\u6574\u4e2a\u5b57\u957f\u3002\u6d6e\u70b9\u6570\u5206\u4e3a\u5355\u7cbe\u5ea6(float)\u548c\u53cc\u7cbe\u5ea6(double)\uff0c\u5206\u522b\u4e3a4\u4e2a\u5b57\u8282\u548c8\u4e2a\u5b57\u8282\u3002</p>"},{"location":"%E8%87%AA%E5%AD%A6%E7%AC%94%E8%AE%B0/CSAPP/Note/Chapter%202%20Representing%20and%20Manipulating%20Information/#212-addressing-and-byte-ordering","title":"2.1.2 Addressing and Byte Ordering","text":""}]}